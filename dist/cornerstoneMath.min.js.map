{"version":3,"sources":["webpack:///cornerstoneMath.min.js","webpack:///webpack/bootstrap 6a9df2e5de301c0d57a6","webpack:///./vector3.js","webpack:///./math.js","webpack:///./quaternion.js","webpack:///./Line3.js","webpack:///./lineSegment.js","webpack:///./matrix4.js","webpack:///./plane.js","webpack:///./point.js","webpack:///./rect.js","webpack:///./index.js"],"names":["cornerstoneMath","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_quaternion","_quaternion2","obj","default","_math","Vector3","x","y","z","this","constructor","set","setX","setY","setZ","setComponent","index","Error","getComponent","copy","v","add","w","undefined","console","warn","addVectors","addScalar","a","b","sub","subVectors","multiply","multiplyVectors","multiplyScalar","scalar","applyAxisAngle","quaternion","axis","angle","applyQuaternion","setFromAxisAngle","applyMatrix3","e","elements","applyMatrix4","applyProjection","q","qx","qy","qz","qw","ix","iy","iz","iw","transformDirection","normalize","divide","divideScalar","invScalar","min","max","clamp","clampScalar","minVal","maxVal","floor","Math","ceil","round","roundToZero","negate","dot","lengthSq","length","sqrt","lengthManhattan","abs","setLength","oldLength","lerp","alpha","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","v1","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","distanceTo","distanceToSquared","dx","dy","dz","setFromMatrixPosition","setFromMatrixScale","sx","sy","sz","setFromMatrixColumn","matrix","offset","me","equals","fromArray","array","toArray","clone","degToRad","degrees","PI","radToDeg","radians","sign","NaN","Quaternion","halfAngle","sin","cos","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","Line3","start","end","line","optionalTarget","t","result","delta","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","da","db","dc","daCrossDb","dcCrossDb","isNaN","intersection","distanceSq","sqr","dist2","distanceToPointSquared","lineSegment","l2","distanceToPoint","intersectLine","lineSegment1","lineSegment2","intersectionPoint","x1","y1","x2","y2","x3","y3","x4","y4","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","num","parseFloat","_vector","_vector2","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","Float32Array","makeRotationFromQuaternion","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","multiplyMatrices","ae","be","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","getInverse","throwOnInvertible","det","msg","identity","applyToVector3Array","j","makeTranslation","makeScale","Plane","constant","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","v2","plane","inverseNormalLength","distanceToSphere","sphere","center","radius","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","direction","denominator","intersectPlane","targetPlane","origin","intersectionData","h1","h2","n1dotn2","coplanarPoint","translate","pageToPoint","pageX","pageY","subtract","lhs","rhs","distance","from","to","distanceSquared","insideRect","rect","left","width","top","height","findClosestPoint","sources","distances","minDistance","forEach","source","push","indexOf","rectToLineSegments","rectToPoints","topLeft","bottomRight","doesIntersect","rect1","rect2","intersectLeftRight","intersectTopBottom","rect1Points","rect2Points","getIntersectionRect","intersectRect","_interopRequireDefault","_Line","_lineSegment","_matrix","_plane","_point","_rect"],"mappings":";AACA,GAAIA,iBACK,SAAUC,GCEnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA+DA,OAnCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAK,GAA2C,MAAAA,IAG3CV,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,GAAAS,GAAAT,KAAAiB,WACA,WAA2B,MAAAjB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDvB,EAAA0B,EAAA,GAGA1B,IAAA2B,EAAA,KDQM,SAAUvB,EAAQD,EAASH,GAEjC,YAGAe,QAAOC,eAAeb,EAAS,cAC7BO,OAAO,GE9ET,IAAAkB,GAAA5B,EAAA,GFmFI6B,EAIJ,SAAgCC,GAAO,MAAOA,IAAOA,EAAIT,WAAaS,GAAQC,QAASD,IAJ7CF,GElF1CI,EAAAhC,EAAA,GAGMiC,EAAU,SAAUC,EAAGC,EAAGC,GAE9BC,KAAKH,EAAIA,GAAK,EACdG,KAAKF,EAAIA,GAAK,EACdE,KAAKD,EAAIA,GAAK,EAIhBH,GAAQT,WAENc,YAAaL,EAEbM,IAJkB,SAIbL,EAAGC,EAAGC,GAMT,MAJAC,MAAKH,EAAIA,EACTG,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAEFC,MAITG,KAdkB,SAcZN,GAIJ,MAFAG,MAAKH,EAAIA,EAEFG,MAITI,KAtBkB,SAsBZN,GAIJ,MAFAE,MAAKF,EAAIA,EAEFE,MAITK,KA9BkB,SA8BZN,GAIJ,MAFAC,MAAKD,EAAIA,EAEFC,MAITM,aAtCkB,SAsCJC,EAAOlC,GAEnB,OAAQkC,GAER,IAAK,GAAGP,KAAKH,EAAIxB,CAAO,MACxB,KAAK,GAAG2B,KAAKF,EAAIzB,CAAO,MACxB,KAAK,GAAG2B,KAAKD,EAAI1B,CAAO,MACxB,SAAS,KAAM,IAAImC,OAAJ,0BAAoCD,KAMrDE,aAnDkB,SAmDJF,GAEZ,OAAQA,GAER,IAAK,GAAG,MAAOP,MAAKH,CACpB,KAAK,GAAG,MAAOG,MAAKF,CACpB,KAAK,GAAG,MAAOE,MAAKD,CACpB,SAAS,KAAM,IAAIS,OAAJ,0BAAoCD,KAMrDG,KAhEkB,SAgEZC,GAMJ,MAJAX,MAAKH,EAAIc,EAAEd,EACXG,KAAKF,EAAIa,EAAEb,EACXE,KAAKD,EAAIY,EAAEZ,EAEJC,MAITY,IA1EkB,SA0EbD,EAAGE,GAEN,WAAUC,KAAND,GAEFE,QAAQC,KAAK,gGAENhB,KAAKiB,WAAWN,EAAGE,KAI5Bb,KAAKH,GAAKc,EAAEd,EACZG,KAAKF,GAAKa,EAAEb,EACZE,KAAKD,GAAKY,EAAEZ,EAELC,OAITkB,UA5FkB,SA4FP5B,GAMT,MAJAU,MAAKH,GAAKP,EACVU,KAAKF,GAAKR,EACVU,KAAKD,GAAKT,EAEHU,MAITiB,WAtGkB,SAsGNE,EAAGC,GAMb,MAJApB,MAAKH,EAAIsB,EAAEtB,EAAIuB,EAAEvB,EACjBG,KAAKF,EAAIqB,EAAErB,EAAIsB,EAAEtB,EACjBE,KAAKD,EAAIoB,EAAEpB,EAAIqB,EAAErB,EAEVC,MAITqB,IAhHkB,SAgHbV,EAAGE,GAEN,WAAUC,KAAND,GAEFE,QAAQC,KAAK,gGAENhB,KAAKsB,WAAWX,EAAGE,KAI5Bb,KAAKH,GAAKc,EAAEd,EACZG,KAAKF,GAAKa,EAAEb,EACZE,KAAKD,GAAKY,EAAEZ,EAELC,OAITsB,WAlIkB,SAkINH,EAAGC,GAMb,MAJApB,MAAKH,EAAIsB,EAAEtB,EAAIuB,EAAEvB,EACjBG,KAAKF,EAAIqB,EAAErB,EAAIsB,EAAEtB,EACjBE,KAAKD,EAAIoB,EAAEpB,EAAIqB,EAAErB,EAEVC,MAITuB,SA5IkB,SA4IRZ,EAAGE,GAEX,WAAUC,KAAND,GAEFE,QAAQC,KAAK,0GAENhB,KAAKwB,gBAAgBb,EAAGE,KAIjCb,KAAKH,GAAKc,EAAEd,EACZG,KAAKF,GAAKa,EAAEb,EACZE,KAAKD,GAAKY,EAAEZ,EAELC,OAITyB,eA9JkB,SA8JFC,GAMd,MAJA1B,MAAKH,GAAK6B,EACV1B,KAAKF,GAAK4B,EACV1B,KAAKD,GAAK2B,EAEH1B,MAITwB,gBAxKkB,SAwKDL,EAAGC,GAMlB,MAJApB,MAAKH,EAAIsB,EAAEtB,EAAIuB,EAAEvB,EACjBG,KAAKF,EAAIqB,EAAErB,EAAIsB,EAAEtB,EACjBE,KAAKD,EAAIoB,EAAEpB,EAAIqB,EAAErB,EAEVC,MAKT2B,eAAiB,WAEf,GAAIC,SAEJ,OAAO,UAAUC,EAAMC,GAQrB,WANmBhB,KAAfc,IACFA,EAAa,GAAApC,GAAAE,SAGfM,KAAK+B,gBAAgBH,EAAWI,iBAAiBH,EAAMC,IAEhD9B,SAMXiC,aArMkB,SAqMJ9D,GAEZ,GAAM0B,GAAIG,KAAKH,EACTC,EAAIE,KAAKF,EACTC,EAAIC,KAAKD,EAETmC,EAAI/D,EAAEgE,QAMZ,OAJAnC,MAAKH,EAAIqC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EACtCC,KAAKF,EAAIoC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EACtCC,KAAKD,EAAImC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EAE/BC,MAIToC,aArNkB,SAqNJjE,GAIZ,GAAI0B,GAAIG,KAAKH,EACXC,EAAIE,KAAKF,EACTC,EAAIC,KAAKD,EAELmC,EAAI/D,EAAEgE,QAMZ,OAJAnC,MAAKH,EAAIqC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EAAImC,EAAE,IAC5ClC,KAAKF,EAAIoC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EAAImC,EAAE,IAC5ClC,KAAKD,EAAImC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,IAAMnC,EAAImC,EAAE,IAEtClC,MAITqC,gBAvOkB,SAuODlE,GAIf,GAAI0B,GAAIG,KAAKH,EACXC,EAAIE,KAAKF,EACTC,EAAIC,KAAKD,EAELmC,EAAI/D,EAAEgE,SACN7D,EAAI,GAAK4D,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,IAAMnC,EAAImC,EAAE,IAMnD,OAJAlC,MAAKH,GAAKqC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EAAImC,EAAE,KAAO5D,EACpD0B,KAAKF,GAAKoC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EAAImC,EAAE,KAAO5D,EACpD0B,KAAKD,GAAKmC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,IAAMnC,EAAImC,EAAE,KAAO5D,EAE9C0B,MAIT+B,gBA1PkB,SA0PDO,GAEf,GAAMzC,GAAIG,KAAKH,EACTC,EAAIE,KAAKF,EACTC,EAAIC,KAAKD,EAETwC,EAAKD,EAAEzC,EACP2C,EAAKF,EAAExC,EACP2C,EAAKH,EAAEvC,EACP2C,EAAKJ,EAAEzB,EAIP8B,EAAKD,EAAK7C,EAAI2C,EAAKzC,EAAI0C,EAAK3C,EAC5B8C,EAAKF,EAAK5C,EAAI2C,EAAK5C,EAAI0C,EAAKxC,EAC5B8C,EAAKH,EAAK3C,EAAIwC,EAAKzC,EAAI0C,EAAK3C,EAC5BiD,GAAMP,EAAK1C,EAAI2C,EAAK1C,EAAI2C,EAAK1C,CAQnC,OAJAC,MAAKH,EAAI8C,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EAC/CxC,KAAKF,EAAI8C,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EAC/CzC,KAAKD,EAAI8C,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EAExCvC,MAIT+C,mBAtRkB,SAsRE5E,GAKlB,GAAI0B,GAAIG,KAAKH,EACXC,EAAIE,KAAKF,EACTC,EAAIC,KAAKD,EAELmC,EAAI/D,EAAEgE,QAQZ,OANAnC,MAAKH,EAAIqC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EACtCC,KAAKF,EAAIoC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,GAAKnC,EACtCC,KAAKD,EAAImC,EAAE,GAAKrC,EAAIqC,EAAE,GAAKpC,EAAIoC,EAAE,IAAMnC,EAEvCC,KAAKgD,YAEEhD,MAITiD,OA3SkB,SA2SVtC,GAMN,MAJAX,MAAKH,GAAKc,EAAEd,EACZG,KAAKF,GAAKa,EAAEb,EACZE,KAAKD,GAAKY,EAAEZ,EAELC,MAITkD,aArTkB,SAqTJxB,GAEZ,GAAe,IAAXA,EAAc,CAEhB,GAAMyB,GAAY,EAAIzB,CAEtB1B,MAAKH,GAAKsD,EACVnD,KAAKF,GAAKqD,EACVnD,KAAKD,GAAKoD,MAIVnD,MAAKH,EAAI,EACTG,KAAKF,EAAI,EACTE,KAAKD,EAAI,CAIX,OAAOC,OAIToD,IA3UkB,SA2UbzC,GAoBH,MAlBIX,MAAKH,EAAIc,EAAEd,IAEbG,KAAKH,EAAIc,EAAEd,GAITG,KAAKF,EAAIa,EAAEb,IAEbE,KAAKF,EAAIa,EAAEb,GAITE,KAAKD,EAAIY,EAAEZ,IAEbC,KAAKD,EAAIY,EAAEZ,GAINC,MAITqD,IAnWkB,SAmWb1C,GAoBH,MAlBIX,MAAKH,EAAIc,EAAEd,IAEbG,KAAKH,EAAIc,EAAEd,GAITG,KAAKF,EAAIa,EAAEb,IAEbE,KAAKF,EAAIa,EAAEb,GAITE,KAAKD,EAAIY,EAAEZ,IAEbC,KAAKD,EAAIY,EAAEZ,GAINC,MAITsD,MA3XkB,SA2XXF,EAAKC,GAkCV,MA9BIrD,MAAKH,EAAIuD,EAAIvD,EAEfG,KAAKH,EAAIuD,EAAIvD,EAEJG,KAAKH,EAAIwD,EAAIxD,IAEtBG,KAAKH,EAAIwD,EAAIxD,GAIXG,KAAKF,EAAIsD,EAAItD,EAEfE,KAAKF,EAAIsD,EAAItD,EAEJE,KAAKF,EAAIuD,EAAIvD,IAEtBE,KAAKF,EAAIuD,EAAIvD,GAIXE,KAAKD,EAAIqD,EAAIrD,EAEfC,KAAKD,EAAIqD,EAAIrD,EAEJC,KAAKD,EAAIsD,EAAItD,IAEtBC,KAAKD,EAAIsD,EAAItD,GAIRC,MAITuD,YAAc,WAEZ,GAAIH,UAAKC,QAET,OAAO,UAAUG,EAAQC,GAYvB,WAVY3C,KAARsC,IAEFA,EAAM,GAAIxD,GACVyD,EAAM,GAAIzD,IAIZwD,EAAIlD,IAAIsD,EAAQA,EAAQA,GACxBH,EAAInD,IAAIuD,EAAQA,EAAQA,GAEjBzD,KAAKsD,MAAMF,EAAKC,OAM3BK,MAvbkB,WA6bhB,MAJA1D,MAAKH,EAAI8D,KAAKD,MAAM1D,KAAKH,GACzBG,KAAKF,EAAI6D,KAAKD,MAAM1D,KAAKF,GACzBE,KAAKD,EAAI4D,KAAKD,MAAM1D,KAAKD,GAElBC,MAIT4D,KAjckB,WAuchB,MAJA5D,MAAKH,EAAI8D,KAAKC,KAAK5D,KAAKH,GACxBG,KAAKF,EAAI6D,KAAKC,KAAK5D,KAAKF,GACxBE,KAAKD,EAAI4D,KAAKC,KAAK5D,KAAKD,GAEjBC,MAIT6D,MA3ckB,WAidhB,MAJA7D,MAAKH,EAAI8D,KAAKE,MAAM7D,KAAKH,GACzBG,KAAKF,EAAI6D,KAAKE,MAAM7D,KAAKF,GACzBE,KAAKD,EAAI4D,KAAKE,MAAM7D,KAAKD,GAElBC,MAIT8D,YArdkB,WA2dhB,MAJA9D,MAAKH,EAAKG,KAAKH,EAAI,EAAK8D,KAAKC,KAAK5D,KAAKH,GAAK8D,KAAKD,MAAM1D,KAAKH,GAC5DG,KAAKF,EAAKE,KAAKF,EAAI,EAAK6D,KAAKC,KAAK5D,KAAKF,GAAK6D,KAAKD,MAAM1D,KAAKF,GAC5DE,KAAKD,EAAKC,KAAKD,EAAI,EAAK4D,KAAKC,KAAK5D,KAAKD,GAAK4D,KAAKD,MAAM1D,KAAKD,GAErDC,MAIT+D,OA/dkB,WAiehB,MAAO/D,MAAKyB,gBAAgB,IAI9BuC,IArekB,SAqebrD,GAEH,MAAOX,MAAKH,EAAIc,EAAEd,EAAIG,KAAKF,EAAIa,EAAEb,EAAIE,KAAKD,EAAIY,EAAEZ,GAIlDkE,SA3ekB,WA6ehB,MAAOjE,MAAKH,EAAIG,KAAKH,EAAIG,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,GAI3DmE,OAjfkB,WAmfhB,MAAOP,MAAKQ,KAAKnE,KAAKH,EAAIG,KAAKH,EAAIG,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,IAIrEqE,gBAvfkB,WAyfhB,MAAOT,MAAKU,IAAIrE,KAAKH,GAAK8D,KAAKU,IAAIrE,KAAKF,GAAK6D,KAAKU,IAAIrE,KAAKD,IAI7DiD,UA7fkB,WA+fhB,MAAOhD,MAAKkD,aAAalD,KAAKkE,WAIhCI,UAngBkB,SAmgBPrG,GAET,GAAMsG,GAAYvE,KAAKkE,QAOvB,OALkB,KAAdK,GAAmBtG,IAAMsG,GAE3BvE,KAAKyB,eAAexD,EAAIsG,GAGnBvE,MAITwE,KAhhBkB,SAghBZ7D,EAAG8D,GAMP,MAJAzE,MAAKH,IAAMc,EAAEd,EAAIG,KAAKH,GAAK4E,EAC3BzE,KAAKF,IAAMa,EAAEb,EAAIE,KAAKF,GAAK2E,EAC3BzE,KAAKD,IAAMY,EAAEZ,EAAIC,KAAKD,GAAK0E,EAEpBzE,MAIT0E,MA1hBkB,SA0hBX/D,EAAGE,GAER,OAAUC,KAAND,EAIF,MAFAE,SAAQC,KAAK,oGAENhB,KAAK2E,aAAahE,EAAGE,EAI9B,IAAIhB,GAAIG,KAAKH,EACXC,EAAIE,KAAKF,EACTC,EAAIC,KAAKD,CAMX,OAJAC,MAAKH,EAAIC,EAAIa,EAAEZ,EAAIA,EAAIY,EAAEb,EACzBE,KAAKF,EAAIC,EAAIY,EAAEd,EAAIA,EAAIc,EAAEZ,EACzBC,KAAKD,EAAIF,EAAIc,EAAEb,EAAIA,EAAIa,EAAEd,EAElBG,MAIT2E,aAhjBkB,SAgjBJxD,EAAGC,GAEf,GAAIwD,GAAKzD,EAAEtB,EACTgF,EAAK1D,EAAErB,EACPgF,EAAK3D,EAAEpB,EACLgF,EAAK3D,EAAEvB,EACTmF,EAAK5D,EAAEtB,EACPmF,EAAK7D,EAAErB,CAMT,OAJAC,MAAKH,EAAIgF,EAAKI,EAAKH,EAAKE,EACxBhF,KAAKF,EAAIgF,EAAKC,EAAKH,EAAKK,EACxBjF,KAAKD,EAAI6E,EAAKI,EAAKH,EAAKE,EAEjB/E,MAITkF,gBAAkB,WAEhB,GAAIC,UAAInB,QAER,OAAO,UAAUoB,GAUf,WARWtE,KAAPqE,IACFA,EAAK,GAAIvF,IAGXuF,EAAGzE,KAAK0E,GAAQpC,YAEhBgB,EAAMhE,KAAKgE,IAAImB,GAERnF,KAAKU,KAAKyE,GAAI1D,eAAeuC,OAMxCqB,eAAiB,WAEf,GAAIF,SAEJ,OAAO,UAAUG,GAQf,WANWxE,KAAPqE,IACFA,EAAK,GAAIvF,IAGXuF,EAAGzE,KAAKV,MAAMkF,gBAAgBI,GAEvBtF,KAAKqB,IAAI8D,OAMpBI,QAAU,WAKR,GAAIJ,SAEJ,OAAO,UAAUK,GAMf,WAJW1E,KAAPqE,IACFA,EAAK,GAAIvF,IAGJI,KAAKqB,IAAI8D,EAAGzE,KAAK8E,GAAQ/D,eAAe,EAAIzB,KAAKgE,IAAIwB,SAMhEC,QA1nBkB,SA0nBT9E,GAEP,GAAM+E,GAAQ1F,KAAKgE,IAAIrD,IAAMX,KAAKkE,SAAWvD,EAAEuD,SAI/C,OAAOP,MAAKgC,MAAK,EAAAhG,EAAA2D,OAAMoC,GAAQ,EAAG,KAIpCE,WApoBkB,SAooBNjF,GAEV,MAAOgD,MAAKQ,KAAKnE,KAAK6F,kBAAkBlF,KAI1CkF,kBA1oBkB,SA0oBClF,GAEjB,GAAMmF,GAAK9F,KAAKH,EAAIc,EAAEd,EAChBkG,EAAK/F,KAAKF,EAAIa,EAAEb,EAChBkG,EAAKhG,KAAKD,EAAIY,EAAEZ,CAEtB,OAAO+F,GAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAIlCC,sBAppBkB,SAopBK9H,GAMrB,MAJA6B,MAAKH,EAAI1B,EAAEgE,SAAS,IACpBnC,KAAKF,EAAI3B,EAAEgE,SAAS,IACpBnC,KAAKD,EAAI5B,EAAEgE,SAAS,IAEbnC,MAITkG,mBA9pBkB,SA8pBE/H,GAElB,GAAMgI,GAAKnG,KAAKE,IAAI/B,EAAEgE,SAAS,GAAIhE,EAAEgE,SAAS,GAAIhE,EAAEgE,SAAS,IAAI+B,SAC3DkC,EAAKpG,KAAKE,IAAI/B,EAAEgE,SAAS,GAAIhE,EAAEgE,SAAS,GAAIhE,EAAEgE,SAAS,IAAI+B,SAC3DmC,EAAKrG,KAAKE,IAAI/B,EAAEgE,SAAS,GAAIhE,EAAEgE,SAAS,GAAIhE,EAAEgE,SAAS,KAAK+B,QAMlE,OAJAlE,MAAKH,EAAIsG,EACTnG,KAAKF,EAAIsG,EACTpG,KAAKD,EAAIsG,EAEFrG,MAGTsG,oBA3qBkB,SA2qBG/F,EAAOgG,GAE1B,GAAMC,GAAiB,EAARjG,EAETkG,EAAKF,EAAOpE,QAMlB,OAJAnC,MAAKH,EAAI4G,EAAGD,GACZxG,KAAKF,EAAI2G,EAAGD,EAAS,GACrBxG,KAAKD,EAAI0G,EAAGD,EAAS,GAEdxG,MAIT0G,OAzrBkB,SAyrBV/F,GAEN,MAASA,GAAEd,IAAMG,KAAKH,GAAOc,EAAEb,IAAME,KAAKF,GAAOa,EAAEZ,IAAMC,KAAKD,GAIhE4G,UA/rBkB,SA+rBPC,GAMT,MAJA5G,MAAKH,EAAI+G,EAAM,GACf5G,KAAKF,EAAI8G,EAAM,GACf5G,KAAKD,EAAI6G,EAAM,GAER5G,MAIT6G,QAzsBkB,WA2sBhB,OAAQ7G,KAAKH,EAAGG,KAAKF,EAAGE,KAAKD,IAI/B+G,MA/sBkB,WAitBhB,MAAO,IAAIlH,GAAQI,KAAKH,EAAGG,KAAKF,EAAGE,KAAKD,KFpB5CjC,EAAQ4B,QE0BOE,GFtBT,SAAU7B,EAAQD,EAASH,GAEjC,YG9sBA,SAAS2F,GAAOzD,EAAGsB,EAAGC,GACpB,MAAQvB,GAAIsB,EAAKA,EAAMtB,EAAIuB,EAAKA,EAAIvB,EAGtC,QAASkH,GAAUC,GAIjB,MAAOA,IAHuBrD,KAAKsD,GAAK,KAM1C,QAASC,GAAUC,GAIjB,MAAOA,IAHuB,IAAMxD,KAAKsD,IAO3C,QAASG,GAAMvH,GACb,MAAoB,gBAANA,GAAiBA,EAAIA,EAAI,GAAK,EAAI,EAAIA,IAAMA,EAAI,EAAIwH,IAAMA,IH6rB1E3I,OAAOC,eAAeb,EAAS,cAC7BO,OAAO,IAwBTP,EGltBEwF,QHmtBFxF,EGltBEiJ,WHmtBFjJ,EGltBEoJ,WHmtBFpJ,EGltBEsJ,QHstBI,SAAUrJ,EAAQD,EAASH,GAEjC,YAGAe,QAAOC,eAAeb,EAAS,cAC7BO,OAAO,GIxvBT,IAAMiJ,GAAa,SAAqBzH,EAAGC,EAAGC,EAAGc,GAC/Cb,KAAKH,EAAIA,GAAK,EACdG,KAAKF,EAAIA,GAAK,EACdE,KAAKD,EAAIA,GAAK,EACdC,KAAKa,MAAWC,KAAND,EAAmBA,EAAI,EAGnCyG,GAAWnI,UAAU6C,iBAAmB,SAAUH,EAAMC,GACtD,GAAIyF,GAAYzF,EAAQ,EACtBxC,EAAIqE,KAAK6D,IAAID,EAOf,OALAvH,MAAKH,EAAIgC,EAAKhC,EAAIP,EAClBU,KAAKF,EAAI+B,EAAK/B,EAAIR,EAClBU,KAAKD,EAAI8B,EAAK9B,EAAIT,EAClBU,KAAKa,EAAI8C,KAAK8D,IAAIF,GAEXvH,MAGTsH,EAAWnI,UAAUuI,oBAAsB,SAAUvG,EAAGC,GACtD,GAAIuG,GAAMxG,EAAEtB,EACV+H,EAAMzG,EAAErB,EACR+H,EAAM1G,EAAEpB,EACR+H,EAAM3G,EAAEN,EACNkH,EAAM3G,EAAEvB,EACVmI,EAAM5G,EAAEtB,EACRmI,EAAM7G,EAAErB,EACRmI,EAAM9G,EAAEP,CAOV,OALAb,MAAKH,EAAI8H,EAAMO,EAAMJ,EAAMC,EAAMH,EAAMK,EAAMJ,EAAMG,EACnDhI,KAAKF,EAAI8H,EAAMM,EAAMJ,EAAME,EAAMH,EAAME,EAAMJ,EAAMM,EACnDjI,KAAKD,EAAI8H,EAAMK,EAAMJ,EAAMG,EAAMN,EAAMK,EAAMJ,EAAMG,EACnD/H,KAAKa,EAAIiH,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAE5CjI,MAGTsH,EAAWnI,UAAUgJ,sBAAwB,SAAUhK,GACrD,GAAIiK,GAAKjK,EAAEgE,SAETkG,EAAMD,EAAG,GACTE,EAAMF,EAAG,GACTG,EAAMH,EAAG,GACTI,EAAMJ,EAAG,GACTK,EAAML,EAAG,GACTM,EAAMN,EAAG,GACTO,EAAMP,EAAG,GACTQ,EAAMR,EAAG,GACTS,EAAMT,EAAG,IAETU,EAAQT,EAAMI,EAAMI,EACpBvJ,QAwCF,OAtCIwJ,GAAQ,GAEVxJ,EAAI,GAAMqE,KAAKQ,KAAK2E,EAAQ,GAE5B9I,KAAKa,EAAI,IAAOvB,EAChBU,KAAKH,GAAK+I,EAAMF,GAAOpJ,EACvBU,KAAKF,GAAKyI,EAAMI,GAAOrJ,EACvBU,KAAKD,GAAKyI,EAAMF,GAAOhJ,GAEd+I,EAAMI,GAAOJ,EAAMQ,GAE5BvJ,EAAI,EAAMqE,KAAKQ,KAAK,EAAMkE,EAAMI,EAAMI,GAEtC7I,KAAKa,GAAK+H,EAAMF,GAAOpJ,EACvBU,KAAKH,EAAI,IAAOP,EAChBU,KAAKF,GAAKwI,EAAME,GAAOlJ,EACvBU,KAAKD,GAAKwI,EAAMI,GAAOrJ,GAEdmJ,EAAMI,GAEfvJ,EAAI,EAAMqE,KAAKQ,KAAK,EAAMsE,EAAMJ,EAAMQ,GAEtC7I,KAAKa,GAAK0H,EAAMI,GAAOrJ,EACvBU,KAAKH,GAAKyI,EAAME,GAAOlJ,EACvBU,KAAKF,EAAI,IAAOR,EAChBU,KAAKD,GAAK2I,EAAME,GAAOtJ,IAIvBA,EAAI,EAAMqE,KAAKQ,KAAK,EAAM0E,EAAMR,EAAMI,GAEtCzI,KAAKa,GAAK2H,EAAMF,GAAOhJ,EACvBU,KAAKH,GAAK0I,EAAMI,GAAOrJ,EACvBU,KAAKF,GAAK4I,EAAME,GAAOtJ,EACvBU,KAAKD,EAAI,IAAOT,GAIXU,MJuvBTlC,EAAQ4B,QIpvBO4H,GJwvBT,SAAUvJ,EAAQD,EAASH,GAEjC,YASA,SAASoL,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHxK,OAAOC,eAAeb,EAAS,cAC7BO,OAAO,GAGT,IAAI8K,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAItL,GAAI,EAAGA,EAAIsL,EAAMpF,OAAQlG,IAAK,CAAE,GAAIuL,GAAaD,EAAMtL,EAAIuL,GAAW1K,WAAa0K,EAAW1K,aAAc,EAAO0K,EAAW3K,cAAe,EAAU,SAAW2K,KAAYA,EAAWC,UAAW,GAAM9K,OAAOC,eAAe0K,EAAQE,EAAWE,IAAKF,IAAiB,MAAO,UAAUN,EAAaS,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBH,EAAY9J,UAAWuK,GAAiBC,GAAaP,EAAiBH,EAAaU,GAAqBV,MKz1B1hBW,ELk2BM,WKj2BV,QAAAA,GAAaC,EAAOC,GAAKf,EAAA/I,KAAA4J,GAEvB5J,KAAK6J,UAAmB/I,KAAV+I,EAAuBA,EAAQ,GAAIpM,iBAAgBmC,QACjEI,KAAK8J,QAAehJ,KAARgJ,EAAqBA,EAAM,GAAIrM,iBAAgBmC,QLs/B7D,MAhJAuJ,GAAaS,IACXH,IAAK,MACLpL,MAAO,SKp2BJwL,EAAOC,GAKV,MAHA9J,MAAK6J,MAAMnJ,KAAKmJ,GAChB7J,KAAK8J,IAAIpJ,KAAKoJ,GAEP9J,QLu2BPyJ,IAAK,OACLpL,MAAO,SKp2BH0L,GAKJ,MAHA/J,MAAK6J,MAAMnJ,KAAKqJ,EAAKF,OACrB7J,KAAK8J,IAAIpJ,KAAKqJ,EAAKD,KAEZ9J,QLu2BPyJ,IAAK,SACLpL,MAAO,SKp2BD2L,GAKN,OAHeA,GAAkB,GAAIvM,iBAAgBmC,SAGvCqB,WAAWjB,KAAK6J,MAAO7J,KAAK8J,KAAKrI,eAAe,OLs2B9DgI,IAAK,QACLpL,MAAO,SKn2BF2L,GAKL,OAHeA,GAAkB,GAAIvM,iBAAgBmC,SAGvC0B,WAAWtB,KAAK8J,IAAK9J,KAAK6J,ULq2BxCJ,IAAK,aACLpL,MAAO,WKh2BP,MAAO2B,MAAK6J,MAAMhE,kBAAkB7F,KAAK8J,QLq2BzCL,IAAK,WACLpL,MAAO,WKh2BP,MAAO2B,MAAK6J,MAAMjE,WAAW5F,KAAK8J,QLq2BlCL,IAAK,KACLpL,MAAO,SKl2BL4L,EAAGD,GAEL,GAAME,GAASF,GAAkB,GAAIvM,iBAAgBmC,OAErD,OAAOI,MAAKmK,MAAMD,GAAQzI,eAAewI,GAAGrJ,IAAIZ,KAAK6J,ULq2BrDJ,IAAK,+BACLpL,MAAO,WKh2BP,GAAM+L,GAAS,GAAI3M,iBAAgBmC,QAC7ByK,EAAW,GAAI5M,iBAAgBmC,OAErC,OAAO,UAAU0K,EAAOC,GAEtBH,EAAO9I,WAAWgJ,EAAOtK,KAAK6J,OAC9BQ,EAAS/I,WAAWtB,KAAK8J,IAAK9J,KAAK6J,MAEnC,IAAMW,GAAYH,EAASrG,IAAIqG,GACzBI,EAAkBJ,EAASrG,IAAIoG,GAEjCH,EAAIQ,EAAkBD,CAQ1B,OANID,KAEFN,EAAIxM,gBAAgBkG,KAAKL,MAAM2G,EAAG,EAAG,IAIhCA,MLq2BTR,IAAK,sBACLpL,MAAO,SKh2BYiM,EAAOC,EAAaP,GAEvC,GAAMC,GAAIjK,KAAK0K,6BAA6BJ,EAAOC,GAE7CL,EAASF,GAAkB,GAAIvM,iBAAgBmC,OAErD,OAAOI,MAAKmK,MAAMD,GAAQzI,eAAewI,GAAGrJ,IAAIZ,KAAK6J,ULm2BrDJ,IAAK,eACLpL,MAAO,SKh2BKkI,GAKZ,MAHAvG,MAAK6J,MAAMzH,aAAamE,GACxBvG,KAAK8J,IAAI1H,aAAamE,GAEfvG,QLm2BPyJ,IAAK,SACLpL,MAAO,SKh2BD0L,GAEN,MAAOA,GAAKF,MAAMnD,OAAO1G,KAAK6J,QAAUE,EAAKD,IAAIpD,OAAO1G,KAAK8J,QLm2B7DL,IAAK,QACLpL,MAAO,WK91BP,OAAO,GAAIZ,iBAAgBmM,OAAQlJ,KAAKV,SLm2BxCyJ,IAAK,gBACLpL,MAAO,SKh2BM0L,GAEb,GAAMY,GAAK3K,KAAK8J,IAAIhD,QAAQzF,IAAIrB,KAAK6J,OAC/Be,EAAKb,EAAKD,IAAIhD,QAAQzF,IAAI0I,EAAKF,OAC/BgB,EAAKd,EAAKF,MAAM/C,QAAQzF,IAAIrB,KAAK6J,OAEjCiB,EAAYH,EAAG7D,QAAQpC,MAAMkG,GAC7BG,EAAYF,EAAG/D,QAAQpC,MAAMkG,EAEnC,IAAmB,IAAfC,EAAG7G,IAAI2G,GAAX,CAKA,GAAMrL,GAAIyL,EAAU/G,IAAI8G,GAAaA,EAAU7G,UAG/C,MAAI3E,EAAI,GAAO0L,MAAM1L,IAArB,CAIA,GAAM2L,GAAejL,KAAK6J,MAAM/C,QAAQlG,IAAI+J,EAAG7D,QAAQrF,eAAenC,GAGtE,OAFqB2L,GAAanE,QAAQzF,IAAI0I,EAAKF,OAAO5F,WAAagH,EAAanE,QAAQzF,IAAI0I,EAAKD,KAAK7F,YAEtF8F,EAAKmB,aAChBD,MADT,SLw2BKrB,IAGT9L,GAAQ4B,QKn2BOkK,GLu2BT,SAAU7L,EAAQD,EAASH,GAEjC,YMxgCA,SAASwN,GAAKtL,GACZ,MAAOA,GAAIA,EAGb,QAASuL,GAAOzK,EAAGE,GACjB,MAAOsK,GAAIxK,EAAEd,EAAIgB,EAAEhB,GAAKsL,EAAIxK,EAAEb,EAAIe,EAAEf,GAGtC,QAASuL,GAAwBC,EAAahB,GAC5C,GAAMiB,GAAKH,EAAME,EAAYzB,MAAOyB,EAAYxB,IAEhD,IAAU,IAAPyB,EACD,MAAOH,GAAMd,EAAOgB,EAAYzB,MAElC,IAAMI,KAAMK,EAAMzK,EAAIyL,EAAYzB,MAAMhK,IAAMyL,EAAYxB,IAAIjK,EAAIyL,EAAYzB,MAAMhK,IAC7EyK,EAAMxK,EAAIwL,EAAYzB,MAAM/J,IAAMwL,EAAYxB,IAAIhK,EAAIwL,EAAYzB,MAAM/J,IAAMyL,CAErF,OAAGtB,GAAI,EACEmB,EAAMd,EAAOgB,EAAYzB,OAE/BI,EAAI,EACEmB,EAAMd,EAAOgB,EAAYxB,KAS3BsB,EAAMd,GALXzK,EAAGyL,EAAYzB,MAAMhK,EAAIoK,GAAKqB,EAAYxB,IAAIjK,EAAIyL,EAAYzB,MAAMhK,GACpEC,EAAGwL,EAAYzB,MAAM/J,EAAImK,GAAKqB,EAAYxB,IAAIhK,EAAIwL,EAAYzB,MAAM/J,KAOxE,QAAS0L,GAAiBF,EAAahB,GACrC,MAAO3G,MAAKQ,KAAKkH,EAAuBC,EAAahB,IAIvD,QAASmB,GAAeC,EAAcC,GACpC,GAAMC,MAEFC,EAAKH,EAAa7B,MAAMhK,EAC1BiM,EAAKJ,EAAa7B,MAAM/J,EACxBiM,EAAKL,EAAa5B,IAAIjK,EACtBmM,EAAKN,EAAa5B,IAAIhK,EACtBmM,EAAKN,EAAa9B,MAAMhK,EACxBqM,EAAKP,EAAa9B,MAAM/J,EACxBqM,EAAKR,EAAa7B,IAAIjK,EACtBuM,EAAKT,EAAa7B,IAAIhK,EAEpBuM,SAAIC,SAAIC,SAAIC,SAAIC,SAAIC,SACpBC,SAAIC,SAAIC,SAAIC,SAEZC,SAAOC,QAeX,IAZAX,EAAKL,EAAKF,EACVS,EAAKV,EAAKE,EACVU,EAAKV,EAAKD,EAAKD,EAAKG,EAGpBa,EAAKR,EAAKJ,EAAKM,EAAKL,EAAKO,EACzBK,EAAKT,EAAKF,EAAKI,EAAKH,EAAKK,GAMd,IAAPI,GACS,IAAPC,GACArP,gBAAgB2J,KAAKyF,KAAQpP,gBAAgB2J,KAAK0F,MAMxDR,EAAKF,EAAKF,EACVM,EAAKP,EAAKE,EACVO,EAAKP,EAAKD,EAAKD,EAAKG,EAIpBO,EAAKL,EAAKT,EAAKW,EAAKV,EAAKY,EACzBE,EAAKN,EAAKP,EAAKS,EAAKR,EAAKU,EAOd,IAAPC,GACS,IAAPC,GACAnP,gBAAgB2J,KAAKuF,KAAQlP,gBAAgB2J,KAAKwF,IAFxD,CASAG,EAASV,EAAKG,EAAOF,EAAKC,EAO1BS,EAAOT,EAAKG,EAAOF,EAAKC,CACxB,IAAM5M,GAAIoN,WAAWD,EAAMD,EAE3BC,GAAOV,EAAKG,EAAOJ,EAAKK,CACxB,IAAM5M,GAAImN,WAAWD,EAAMD,EAK3B,OAHAnB,GAAkB/L,EAAIA,EACtB+L,EAAkB9L,EAAIA,EAEf8L,GNw5BTlN,OAAOC,eAAeb,EAAS,cAC7BO,OAAO,GMr5BT,IAAMiN,IACJE,kBACAC,gBNqhCF3N,GAAQ4B,QMlhCO4L,GNshCT,SAAUvN,EAAQD,EAASH,GAEjC,YAGAe,QAAOC,eAAeb,EAAS,cAC7BO,OAAO,GOzpCT,IAAA6O,GAAAvP,EAAA,GP8pCIwP,EAEJ,SAAgC1N,GAAO,MAAOA,IAAOA,EAAIT,WAAaS,GAAQC,QAASD,IAFjDyN,GO3pChCE,EAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC3GpO,KAAKmC,SAAW,GAAIkM,cAAa,GAKjC,IAAMjG,GAAKpI,KAAKmC,QAEhBiG,GAAG,OAActH,KAARuM,EAAqBA,EAAM,EAAGjF,EAAG,GAAKkF,GAAO,EAAGlF,EAAG,GAAKmF,GAAO,EAAGnF,EAAG,IAAMoF,GAAO,EAC3FpF,EAAG,GAAKqF,GAAO,EAAGrF,EAAG,OAActH,KAAR4M,EAAqBA,EAAM,EAAGtF,EAAG,GAAKuF,GAAO,EAAGvF,EAAG,IAAMwF,GAAO,EAC3FxF,EAAG,GAAKyF,GAAO,EAAGzF,EAAG,GAAK0F,GAAO,EAAG1F,EAAG,QAAetH,KAARiN,EAAqBA,EAAM,EAAG3F,EAAG,IAAM4F,GAAO,EAC5F5F,EAAG,GAAK6F,GAAO,EAAG7F,EAAG,GAAK8F,GAAO,EAAG9F,EAAG,IAAM+F,GAAO,EAAG/F,EAAG,QAAetH,KAARsN,EAAqBA,EAAM,EAG9FhB,GAAQjO,UAAUmP,2BAA6B,SAAUhM,GACvD,GAAM8F,GAAKpI,KAAKmC,SAEZtC,EAAIyC,EAAEzC,EACRC,EAAIwC,EAAExC,EACNC,EAAIuC,EAAEvC,EACNc,EAAIyB,EAAEzB,EACJkL,EAAKlM,EAAIA,EACXmM,EAAKlM,EAAIA,EACTyO,EAAKxO,EAAIA,EACPyO,EAAK3O,EAAIkM,EACX0C,EAAK5O,EAAImM,EACT0C,EAAK7O,EAAI0O,EACPI,EAAK7O,EAAIkM,EACX4C,EAAK9O,EAAIyO,EACTM,EAAK9O,EAAIwO,EACPO,EAAKjO,EAAIkL,EACXgD,EAAKlO,EAAImL,EACTgD,EAAKnO,EAAI0N,CAyBX,OAvBAnG,GAAG,GAAK,GAAKuG,EAAKE,GAClBzG,EAAG,GAAKqG,EAAKO,EACb5G,EAAG,GAAKsG,EAAKK,EAEb3G,EAAG,GAAKqG,EAAKO,EACb5G,EAAG,GAAK,GAAKoG,EAAKK,GAClBzG,EAAG,GAAKwG,EAAKE,EAEb1G,EAAG,GAAKsG,EAAKK,EACb3G,EAAG,GAAKwG,EAAKE,EACb1G,EAAG,IAAM,GAAKoG,EAAKG,GAGnBvG,EAAG,GAAK,EACRA,EAAG,GAAK,EACRA,EAAG,IAAM,EAGTA,EAAG,IAAM,EACTA,EAAG,IAAM,EACTA,EAAG,IAAM,EACTA,EAAG,IAAM,EAEFpI,MAGToN,EAAQjO,UAAU8P,iBAAmB,SAAU9N,EAAGC,GAChD,GAAM8N,GAAK/N,EAAEgB,SACPgN,EAAK/N,EAAEe,SACPiG,EAAKpI,KAAKmC,SAEZiN,EAAMF,EAAG,GACXG,EAAMH,EAAG,GACTI,EAAMJ,EAAG,GACTK,EAAML,EAAG,IACPM,EAAMN,EAAG,GACXO,EAAMP,EAAG,GACTQ,EAAMR,EAAG,GACTS,EAAMT,EAAG,IACPU,EAAMV,EAAG,GACXW,EAAMX,EAAG,GACTY,EAAMZ,EAAG,IACTa,EAAMb,EAAG,IACPc,EAAMd,EAAG,GACXe,EAAMf,EAAG,GACTgB,EAAMhB,EAAG,IACTiB,EAAMjB,EAAG,IAEPkB,EAAMjB,EAAG,GACXkB,EAAMlB,EAAG,GACTmB,EAAMnB,EAAG,GACToB,EAAMpB,EAAG,IACPqB,EAAMrB,EAAG,GACXsB,EAAMtB,EAAG,GACTuB,EAAMvB,EAAG,GACTwB,EAAMxB,EAAG,IACPyB,EAAMzB,EAAG,GACX0B,EAAM1B,EAAG,GACT2B,EAAM3B,EAAG,IACT4B,EAAM5B,EAAG,IACP6B,EAAM7B,EAAG,GACX8B,EAAM9B,EAAG,GACT+B,EAAM/B,EAAG,IACTgC,EAAMhC,EAAG,GAsBX,OApBA/G,GAAG,GAAKgH,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAClD5I,EAAG,GAAKgH,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAAMtB,EAAM0B,EAClD7I,EAAG,GAAKgH,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAAMvB,EAAM2B,EAClD9I,EAAG,IAAMgH,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAAMxB,EAAM4B,EAEnD/I,EAAG,GAAKoH,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAClD5I,EAAG,GAAKoH,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAClD7I,EAAG,GAAKoH,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAClD9I,EAAG,IAAMoH,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAEnD/I,EAAG,GAAKwH,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAClD5I,EAAG,GAAKwH,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAClD7I,EAAG,IAAMwH,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EACnD9I,EAAG,IAAMwH,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAEnD/I,EAAG,GAAK4H,EAAMI,EAAMH,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAClD5I,EAAG,GAAK4H,EAAMK,EAAMJ,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EAClD7I,EAAG,IAAM4H,EAAMM,EAAML,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EACnD9I,EAAG,IAAM4H,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAE5CnR,MAGToN,EAAQjO,UAAUoC,SAAW,SAAUpD,EAAGY,GAExC,WAAU+B,KAAN/B,GAEFgC,QAAQC,KAAK,2GAENhB,KAAKiP,iBAAiB9Q,EAAGY,IAG3BiB,KAAKiP,iBAAiBjP,KAAM7B,IAGrCiP,EAAQjO,UAAUiS,WAAa,SAAUjT,EAAGkT,GAG1C,GAAMjJ,GAAKpI,KAAKmC,SACVsE,EAAKtI,EAAEgE,SAETkL,EAAM5G,EAAG,GACX6G,EAAM7G,EAAG,GACT8G,EAAM9G,EAAG,GACT+G,EAAM/G,EAAG,IACPgH,EAAMhH,EAAG,GACXiH,EAAMjH,EAAG,GACTkH,EAAMlH,EAAG,GACTmH,EAAMnH,EAAG,IACPoH,EAAMpH,EAAG,GACXqH,EAAMrH,EAAG,GACTsH,EAAMtH,EAAG,IACTuH,EAAMvH,EAAG,IACPwH,EAAMxH,EAAG,GACXyH,EAAMzH,EAAG,GACT0H,EAAM1H,EAAG,IACT2H,EAAM3H,EAAG,GAEX2B,GAAG,GAAKuF,EAAMK,EAAME,EAAMN,EAAMG,EAAMG,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAC9GhG,EAAG,GAAKoF,EAAMO,EAAMG,EAAMX,EAAMS,EAAME,EAAMV,EAAMM,EAAMK,EAAMb,EAAMU,EAAMG,EAAMZ,EAAMO,EAAMM,EAAMd,EAAMS,EAAMK,EAC9GhG,EAAG,GAAKmF,EAAMK,EAAMM,EAAMV,EAAMG,EAAMO,EAAMV,EAAME,EAAMS,EAAMb,EAAMM,EAAMO,EAAMZ,EAAMG,EAAMU,EAAMd,EAAMK,EAAMS,EAC9GhG,EAAG,IAAMoF,EAAMG,EAAMG,EAAMP,EAAMK,EAAME,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAC/G5F,EAAG,GAAKwF,EAAMG,EAAME,EAAMN,EAAMK,EAAMC,EAAML,EAAMC,EAAMM,EAAMV,EAAMO,EAAMG,EAAMR,EAAME,EAAMO,EAAMX,EAAMM,EAAMK,EAC9GhG,EAAG,GAAKmF,EAAMS,EAAMC,EAAMT,EAAMO,EAAME,EAAMT,EAAMK,EAAMM,EAAMd,EAAMW,EAAMG,EAAMZ,EAAMM,EAAMO,EAAMf,EAAMU,EAAMK,EAC9GhG,EAAG,GAAKoF,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAAMT,EAAMC,EAAMU,EAAMd,EAAMO,EAAMO,EAAMZ,EAAME,EAAMW,EAAMf,EAAMM,EAAMS,EAC9GhG,EAAG,IAAMmF,EAAMK,EAAMC,EAAML,EAAMG,EAAME,EAAML,EAAMC,EAAMM,EAAMV,EAAMO,EAAMG,EAAMR,EAAME,EAAMO,EAAMX,EAAMM,EAAMK,EAC/G5F,EAAG,GAAKsF,EAAMM,EAAMC,EAAML,EAAME,EAAMG,EAAML,EAAMC,EAAMK,EAAMT,EAAMO,EAAME,EAAMR,EAAMG,EAAMO,EAAMX,EAAMK,EAAMM,EAC9GhG,EAAG,GAAKoF,EAAMM,EAAMG,EAAMX,EAAMU,EAAMC,EAAMT,EAAMK,EAAMK,EAAMb,EAAMW,EAAME,EAAMZ,EAAMO,EAAMO,EAAMf,EAAMS,EAAMM,EAC9GhG,EAAG,IAAMkF,EAAMM,EAAMK,EAAMT,EAAME,EAAMO,EAAMT,EAAMC,EAAMS,EAAMb,EAAMO,EAAMM,EAAMZ,EAAMG,EAAMW,EAAMf,EAAMK,EAAMU,EAC/GhG,EAAG,IAAMoF,EAAME,EAAMG,EAAMP,EAAMM,EAAMC,EAAML,EAAMC,EAAMK,EAAMT,EAAMO,EAAME,EAAMR,EAAMG,EAAMO,EAAMX,EAAMK,EAAMM,EAC/G5F,EAAG,GAAKuF,EAAMG,EAAMG,EAAMP,EAAMK,EAAME,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAC9G/F,EAAG,GAAKkF,EAAMS,EAAME,EAAMV,EAAMO,EAAMG,EAAMV,EAAMM,EAAMK,EAAMb,EAAMU,EAAMG,EAAMZ,EAAMO,EAAMM,EAAMd,EAAMS,EAAMK,EAC9G/F,EAAG,IAAMmF,EAAMG,EAAMO,EAAMX,EAAMK,EAAMM,EAAMV,EAAME,EAAMS,EAAMb,EAAMM,EAAMO,EAAMZ,EAAMG,EAAMU,EAAMd,EAAMK,EAAMS,EAC/G/F,EAAG,IAAMkF,EAAMK,EAAME,EAAMN,EAAMG,EAAMG,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,CAE/G,IAAMuD,GAAMjE,EAAMjF,EAAG,GAAKqF,EAAMrF,EAAG,GAAKyF,EAAMzF,EAAG,GAAK6F,EAAM7F,EAAG,GAE/D,IAAY,IAARkJ,EAAW,CAEb,GAAMC,GAAM,6DAEZ,IAAIF,EAEF,KAAM,IAAI7Q,OAAM+Q,EAUlB,OANExQ,SAAQC,KAAKuQ,GAIfvR,KAAKwR,WAEExR,KAKT,MAFAA,MAAKyB,eAAe,EAAI6P,GAEjBtR,MAIToN,EAAQjO,UAAUsS,oBAAsB,WAEtC,GAAMtM,GAAK,GAAAgI,GAAAzN,OAEX,OAAO,UAAUkH,EAAOJ,EAAQtC,OAEfpD,KAAX0F,IACFA,EAAS,OAEI1F,KAAXoD,IACFA,EAAS0C,EAAM1C,OAGjB,KAAK,GAAIlG,GAAI,EAAG0T,EAAIlL,EAAQxI,EAAIkG,EAAQlG,GAAK,EAAG0T,GAAK,EAEnDvM,EAAGtF,EAAI+G,EAAM8K,GACbvM,EAAGrF,EAAI8G,EAAM8K,EAAI,GACjBvM,EAAGpF,EAAI6G,EAAM8K,EAAI,GAEjBvM,EAAG/C,aAAapC,MAEhB4G,EAAM8K,GAAKvM,EAAGtF,EACd+G,EAAM8K,EAAI,GAAKvM,EAAGrF,EAClB8G,EAAM8K,EAAI,GAAKvM,EAAGpF,CAIpB,OAAO6G,KAMXwG,EAAQjO,UAAUwS,gBAAkB,SAAU9R,EAAGC,EAAGC,GAWlD,MATAC,MAAKE,IAEC,EAAG,EAAG,EAAGL,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAG,GAIRC,MAGToN,EAAQjO,UAAUsC,eAAiB,SAAUnC,GAE3C,GAAM8I,GAAKpI,KAAKmC,QAOhB,OALAiG,GAAG,IAAM9I,EAAG8I,EAAG,IAAM9I,EAAG8I,EAAG,IAAM9I,EAAG8I,EAAG,KAAO9I,EAC9C8I,EAAG,IAAM9I,EAAG8I,EAAG,IAAM9I,EAAG8I,EAAG,IAAM9I,EAAG8I,EAAG,KAAO9I,EAC9C8I,EAAG,IAAM9I,EAAG8I,EAAG,IAAM9I,EAAG8I,EAAG,KAAO9I,EAAG8I,EAAG,KAAO9I,EAC/C8I,EAAG,IAAM9I,EAAG8I,EAAG,IAAM9I,EAAG8I,EAAG,KAAO9I,EAAG8I,EAAG,KAAO9I,EAExCU,MAGToN,EAAQjO,UAAUe,IAAM,SAAUmN,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAE3G,GAAMhG,GAAKpI,KAAKmC,QAOhB,OALAiG,GAAG,GAAKiF,EAAKjF,EAAG,GAAKkF,EAAKlF,EAAG,GAAKmF,EAAKnF,EAAG,IAAMoF,EAChDpF,EAAG,GAAKqF,EAAKrF,EAAG,GAAKsF,EAAKtF,EAAG,GAAKuF,EAAKvF,EAAG,IAAMwF,EAChDxF,EAAG,GAAKyF,EAAKzF,EAAG,GAAK0F,EAAK1F,EAAG,IAAM2F,EAAK3F,EAAG,IAAM4F,EACjD5F,EAAG,GAAK6F,EAAK7F,EAAG,GAAK8F,EAAK9F,EAAG,IAAM+F,EAAK/F,EAAG,IAAMgG,EAE1CpO,MAIToN,EAAQjO,UAAUyS,UAAY,SAAU/R,EAAGC,EAAGC,GAW5C,MATAC,MAAKE,IAECL,EAAG,EAAG,EAAG,EACT,EAAGC,EAAG,EAAG,EACT,EAAG,EAAGC,EAAG,EACT,EAAG,EAAG,EAAG,GAIRC,MP4oCTlC,EAAQ4B,QOxoCO0N,GP4oCT,SAAUrP,EAAQD,EAASH,GAEjC,YAGAe,QAAOC,eAAeb,EAAS,cAC7BO,OAAO,GQr7CT,IAAA6O,GAAAvP,EAAA,GR07CIwP,EAEJ,SAAgC1N,GAAO,MAAOA,IAAOA,EAAIT,WAAaS,GAAQC,QAASD,IAFjDyN,GQn7ChC2E,EAAQ,SAAUrM,EAAQsM,GAE9B9R,KAAKwF,WAAqB1E,KAAX0E,EAAwBA,EAAS,GAAA2H,GAAAzN,QAAY,EAAG,EAAG,GAClEM,KAAK8R,aAAyBhR,KAAbgR,EAA0BA,EAAW,EAIxDD,GAAM1S,WAEJc,YAAa4R,EAEb3R,IAJgB,SAIXsF,EAAQsM,GAKX,MAHA9R,MAAKwF,OAAO9E,KAAK8E,GACjBxF,KAAK8R,SAAWA,EAET9R,MAIT+R,cAbgB,SAaDlS,EAAGC,EAAGC,EAAGc,GAKtB,MAHAb,MAAKwF,OAAOtF,IAAIL,EAAGC,EAAGC,GACtBC,KAAK8R,SAAWjR,EAETb,MAITgS,8BAtBgB,SAsBexM,EAAQ8E,GAKrC,MAHAtK,MAAKwF,OAAO9E,KAAK8E,GACjBxF,KAAK8R,UAAYxH,EAAMtG,IAAIhE,KAAKwF,QAEzBxF,MAITiS,sBAAwB,WAEtB,GAAM9M,GAAK,GAAAgI,GAAAzN,QACLwS,EAAK,GAAA/E,GAAAzN,OAEX,OAAO,UAAUyB,EAAGC,EAAGhD,GAErB,GAAMoH,GAASL,EAAG7D,WAAWlD,EAAGgD,GAAGsD,MAAMwN,EAAG5Q,WAAWH,EAAGC,IAAI4B,WAM9D,OAFAhD,MAAKgS,8BAA8BxM,EAAQrE,GAEpCnB,SAOXU,KAnDgB,SAmDVyR,GAKJ,MAHAnS,MAAKwF,OAAO9E,KAAKyR,EAAM3M,QACvBxF,KAAK8R,SAAWK,EAAML,SAEf9R,MAITgD,UA5DgB,WAgEd,GAAMoP,GAAsB,EAAMpS,KAAKwF,OAAOtB,QAK9C,OAHAlE,MAAKwF,OAAO/D,eAAe2Q,GAC3BpS,KAAK8R,UAAYM,EAEVpS,MAIT+D,OAzEgB,WA8Ed,MAHA/D,MAAK8R,WAAa,EAClB9R,KAAKwF,OAAOzB,SAEL/D,MAITwL,gBAlFgB,SAkFClB,GAEf,MAAOtK,MAAKwF,OAAOxB,IAAIsG,GAAStK,KAAK8R,UAIvCO,iBAxFgB,SAwFEC,GAEhB,MAAOtS,MAAKwL,gBAAgB8G,EAAOC,QAAUD,EAAOE,QAItDC,aA9FgB,SA8FFnI,EAAON,GAEnB,MAAOhK,MAAK0S,WAAWpI,EAAON,GAAgB3I,IAAIiJ,GAAOvG,UAI3D2O,WApGgB,SAoGJpI,EAAON,GAEjB,GAAM2I,GAAyB3S,KAAKwL,gBAAgBlB,EAKpD,QAHeN,GAAkB,GAAAmD,GAAAzN,SAGnBgB,KAAKV,KAAKwF,QAAQ/D,eAAekR,IAIjDC,mBA/GgB,SA+GI7I,GAIlB,GAAM8I,GAAY7S,KAAKwL,gBAAgBzB,EAAKF,OACtCiJ,EAAU9S,KAAKwL,gBAAgBzB,EAAKD,IAE1C,OAAQ+I,GAAY,GAAKC,EAAU,GAAOA,EAAU,GAAKD,EAAY,GAIvEpH,cAAgB,WAEd,GAAMtG,GAAK,GAAAgI,GAAAzN,OAEX,OAAO,UAAUqK,EAAMC,GAErB,GAAME,GAASF,GAAkB,GAAAmD,GAAAzN,QAE3BqT,EAAYhJ,EAAKI,MAAMhF,GAEvB6N,EAAchT,KAAKwF,OAAOxB,IAAI+O,EAEpC,IAAoB,IAAhBC,EAAJ,CAcA,GAAM/I,KAAMF,EAAKF,MAAM7F,IAAIhE,KAAKwF,QAAUxF,KAAK8R,UAAYkB,CAE3D,MAAI/I,EAAI,GAAKA,EAAI,GAMjB,MAAOC,GAAOxJ,KAAKqS,GAAWtR,eAAewI,GAAGrJ,IAAImJ,EAAKF,WAnBvD,IAAyC,IAArC7J,KAAKwL,gBAAgBzB,EAAKF,OAE5B,MAAOK,GAAOxJ,KAAKqJ,EAAKF,WAuBhCoJ,eAlKgB,SAkKAC,GAEd,GAAMH,GAAY/S,KAAKwF,OAAOsB,QAAQpC,MAAMwO,EAAY1N,QAClD2N,EAAS,GAAAhG,GAAAzN,QACT0T,GACJD,SACAJ,YAKF,IAAI/S,KAAKwF,OAAOsB,QAAQpC,MAAMwO,EAAY1N,QAAQtB,OAAS,MAGzD,MAFAkP,GAAiBL,UAAY,GAAA5F,GAAAzN,QAEtB0T,CAGT,IAAMC,GAAKrT,KAAK8R,SACVwB,EAAKJ,EAAYpB,SACjByB,EAAUvT,KAAKwF,OAAOsB,QAAQ9C,IAAIkP,EAAY1N,QAE9CiH,IAAO4G,EAAKC,EAAKC,IAAY,EAAIA,EAAUA,GAC3C7G,IAAO4G,EAAKD,EAAKE,IAAY,EAAIA,EAAUA,EAIjD,OAFAH,GAAiBD,OAASnT,KAAKwF,OAAOsB,QAAQrF,eAAegL,GAAI7L,IAAIsS,EAAY1N,OAAOsB,QAAQrF,eAAeiL,IAExG0G,GAGTI,cA/LgB,SA+LDxJ,GAKb,OAHeA,GAAkB,GAAAmD,GAAAzN,SAGnBgB,KAAKV,KAAKwF,QAAQ/D,gBAAgBzB,KAAK8R,WAIvD2B,UAxMgB,SAwMLjN,GAIT,MAFAxG,MAAK8R,SAAW9R,KAAK8R,SAAWtL,EAAOxC,IAAIhE,KAAKwF,QAEzCxF,MAIT0G,OAhNgB,SAgNRyL,GAEN,MAAOA,GAAM3M,OAAOkB,OAAO1G,KAAKwF,SAAY2M,EAAML,WAAa9R,KAAK8R,UAItEhL,MAtNgB,WAwNd,OAAO,GAAI+K,IAAQnR,KAAKV,QR45C5BlC,EAAQ4B,QQv5COmS,GR25CT,SAAU9T,EAAQD,EAASH,GAEjC,YSxoDA,SAAS+V,GAAaxR,GACpB,OACErC,EAAGqC,EAAEyR,MACL7T,EAAGoC,EAAE0R,OAIT,QAASC,GAAUC,EAAKC,GACtB,OACElU,EAAGiU,EAAIjU,EAAIkU,EAAIlU,EACfC,EAAGgU,EAAIhU,EAAIiU,EAAIjU,GAInB,QAASY,GAAM4J,GACb,OACEzK,EAAGyK,EAAMzK,EACTC,EAAGwK,EAAMxK,GAIb,QAASkU,GAAUC,EAAMC,GACvB,MAAOvQ,MAAKQ,KAAKgQ,EAAgBF,EAAMC,IAGzC,QAASC,GAAiBF,EAAMC,GAC9B,GAAM/J,GAAQ0J,EAASI,EAAMC,EAG7B,OAAO/J,GAAMtK,EAAIsK,EAAMtK,EAAIsK,EAAMrK,EAAIqK,EAAMrK,EAG7C,QAASsU,GAAY9J,EAAO+J,GAC1B,QAAG/J,EAAMzK,EAAIwU,EAAKC,MACZhK,EAAMzK,EAAIwU,EAAKC,KAAOD,EAAKE,OAC3BjK,EAAMxK,EAAIuU,EAAKG,KACflK,EAAMxK,EAAIuU,EAAKG,IAAMH,EAAKI,QAelC,QAASC,GAAkBC,EAAStL,GAClC,GAAMuL,MACFC,QAiBJ,OAfAF,GAAQG,QAAQ,SAAUC,EAAQxU,GAChC,GAAMyT,GAAWvW,gBAAgB6M,MAAM0J,SAASe,EAAQ1L,EAExDuL,GAAUI,KAAKhB,GAGba,EADY,IAAVtU,EACYyT,EAEArQ,KAAKP,IAAI4Q,EAAUa,KAO9BF,EAHOC,EAAUK,QAAQJ,ITwkDlCnW,OAAOC,eAAeb,EAAS,cAC7BO,OAAO,GSnkDT,IAAMiM,IACJuJ,WACAnT,OACAgT,cACAM,WACAG,kBACAC,aACAM,mBT4oDF5W,GAAQ4B,QSzoDO4K,GT6oDT,SAAUvM,EAAQD,EAASH,GAEjC,YUluDC,SAASuX,GAAoBb,GAgD3B,QA9CExK,OACEhK,EAAGwU,EAAKC,KACRxU,EAAGuU,EAAKG,KAEV1K,KACEjK,EAAGwU,EAAKC,KAAOD,EAAKE,MACpBzU,EAAGuU,EAAKG,OAKV3K,OACEhK,EAAGwU,EAAKC,KAAOD,EAAKE,MACpBzU,EAAGuU,EAAKG,KAEV1K,KACEjK,EAAGwU,EAAKC,KAAOD,EAAKE,MACpBzU,EAAGuU,EAAKG,IAAMH,EAAKI,UAKrB5K,OACEhK,EAAGwU,EAAKC,KAAOD,EAAKE,MACpBzU,EAAGuU,EAAKG,IAAMH,EAAKI,QAErB3K,KACEjK,EAAGwU,EAAKC,KACRxU,EAAGuU,EAAKG,IAAMH,EAAKI,UAKrB5K,OACEhK,EAAGwU,EAAKC,KACRxU,EAAGuU,EAAKG,IAAMH,EAAKI,QAErB3K,KACEjK,EAAGwU,EAAKC,KACRxU,EAAGuU,EAAKG,OAUd,QAAShJ,GAAiB6I,EAAM/J,GAC9B,GAAIuK,GAAc,MAWlB,OAVqBK,GAAmBb,GAE3BS,QAAQ,SAAUxJ,GAC7B,GAAM0I,GAAWvW,gBAAgB6N,YAAYE,gBAAgBF,EAAahB,EAEvE0J,GAAWa,IACZA,EAAcb,KAIXa,EAIT,QAASM,GAAcd,GAYrB,OAVEe,SACEvV,EAAGwU,EAAKC,KACRxU,EAAGuU,EAAKG,KAEVa,aACExV,EAAGwU,EAAKC,KAAOD,EAAKE,MACpBzU,EAAGuU,EAAKG,IAAMH,EAAKI,SAQzB,QAASa,GAAeC,EAAOC,GAC7B,GAAIC,UACAC,SAEEC,EAAcR,EAAaI,GAC3BK,EAAcT,EAAaK,EA0BjC,OAtBIC,GAFAF,EAAMhB,OAAS,EACbiB,EAAMjB,OAAS,IACOoB,EAAYN,YAAYxV,GAAK+V,EAAYR,QAAQvV,GAAO+V,EAAYP,YAAYxV,GAAK8V,EAAYP,QAAQvV,KAEzG8V,EAAYN,YAAYxV,GAAK+V,EAAYP,YAAYxV,GAAO+V,EAAYR,QAAQvV,GAAK8V,EAAYP,QAAQvV,GAE1H2V,EAAMjB,OAAS,IACAoB,EAAYP,QAAQvV,GAAK+V,EAAYR,QAAQvV,GAAO+V,EAAYP,YAAYxV,GAAK8V,EAAYN,YAAYxV,KAEzG8V,EAAYP,QAAQvV,GAAK+V,EAAYP,YAAYxV,GAAO+V,EAAYR,QAAQvV,GAAK8V,EAAYN,YAAYxV,GAK/H6V,EAFAH,EAAMd,QAAU,EACde,EAAMf,QAAU,IACMkB,EAAYN,YAAYvV,GAAK8V,EAAYR,QAAQtV,GAAO8V,EAAYP,YAAYvV,GAAK6V,EAAYP,QAAQtV,KAEzG6V,EAAYN,YAAYvV,GAAK8V,EAAYP,YAAYvV,GAAO8V,EAAYR,QAAQtV,GAAK6V,EAAYP,QAAQtV,GAE1H0V,EAAMf,QAAU,IACDkB,EAAYP,QAAQtV,GAAK8V,EAAYR,QAAQtV,GAAO8V,EAAYP,YAAYvV,GAAK6V,EAAYN,YAAYvV,KAEzG6V,EAAYP,QAAQtV,GAAK8V,EAAYP,YAAYvV,GAAO8V,EAAYpB,KAAOmB,EAAYN,YAAYvV,GAGtH2V,GAAsBC,EAI/B,QAASG,GAAqBN,EAAOC,GACnC,GAAMM,IACJV,WACAC,eAGF,IAAKC,EAAcC,EAAOC,GAA1B,CAIA,GAAMG,GAAcR,EAAaI,GAC3BK,EAAcT,EAAaK,EAmCjC,OAjCID,GAAMhB,OAAS,EACbiB,EAAMjB,OAAS,GACjBuB,EAAcV,QAAQvV,EAAI8D,KAAKN,IAAIsS,EAAYP,QAAQvV,EAAG+V,EAAYR,QAAQvV,GAC9EiW,EAAcT,YAAYxV,EAAI8D,KAAKP,IAAIuS,EAAYN,YAAYxV,EAAG+V,EAAYP,YAAYxV,KAE1FiW,EAAcV,QAAQvV,EAAI8D,KAAKN,IAAIsS,EAAYP,QAAQvV,EAAG+V,EAAYP,YAAYxV,GAClFiW,EAAcT,YAAYxV,EAAI8D,KAAKP,IAAIuS,EAAYN,YAAYxV,EAAG+V,EAAYR,QAAQvV,IAE/E2V,EAAMjB,OAAS,GACxBuB,EAAcV,QAAQvV,EAAI8D,KAAKP,IAAIuS,EAAYP,QAAQvV,EAAG+V,EAAYP,YAAYxV,GAClFiW,EAAcT,YAAYxV,EAAI8D,KAAKN,IAAIsS,EAAYN,YAAYxV,EAAG+V,EAAYR,QAAQvV,KAEtFiW,EAAcV,QAAQvV,EAAI8D,KAAKP,IAAIuS,EAAYP,QAAQvV,EAAG+V,EAAYR,QAAQvV,GAC9EiW,EAAcT,YAAYxV,EAAI8D,KAAKN,IAAIsS,EAAYN,YAAYxV,EAAG+V,EAAYP,YAAYxV,IAGxF0V,EAAMd,QAAU,EACde,EAAMf,QAAU,GAClBqB,EAAcV,QAAQtV,EAAI6D,KAAKN,IAAIsS,EAAYP,QAAQtV,EAAG8V,EAAYR,QAAQtV,GAC9EgW,EAAcT,YAAYvV,EAAI6D,KAAKP,IAAIuS,EAAYN,YAAYvV,EAAG8V,EAAYP,YAAYvV,KAE1FgW,EAAcV,QAAQtV,EAAI6D,KAAKN,IAAIsS,EAAYP,QAAQtV,EAAG8V,EAAYP,YAAYvV,GAClFgW,EAAcT,YAAYvV,EAAI6D,KAAKP,IAAIuS,EAAYN,YAAYvV,EAAG8V,EAAYR,QAAQtV,IAE/E0V,EAAMf,QAAU,GACzBqB,EAAcV,QAAQtV,EAAI6D,KAAKP,IAAIuS,EAAYP,QAAQtV,EAAG8V,EAAYP,YAAYvV,GAClFgW,EAAcT,YAAYvV,EAAI6D,KAAKN,IAAIsS,EAAYN,YAAYvV,EAAG8V,EAAYR,QAAQtV,KAEtFgW,EAAcV,QAAQtV,EAAI6D,KAAKP,IAAIuS,EAAYP,QAAQtV,EAAG8V,EAAYR,QAAQtV,GAC9EgW,EAAcT,YAAYvV,EAAI6D,KAAKN,IAAIsS,EAAYN,YAAYvV,EAAG8V,EAAYP,YAAYvV,IAIrFgW,GVikDVpX,OAAOC,eAAeb,EAAS,cAC7BO,OAAO,GU9jDR,IAAMgW,IACJ7I,kBACAqK,sBVyuDH/X,GAAQ4B,QUtuDQ2U,GV0uDV,SAAUtW,EAAQD,EAASH,GAEjC,YA0GA,SAASoY,GAAuBtW,GAAO,MAAOA,IAAOA,EAAIT,WAAaS,GAAQC,QAASD,GAvGvFf,OAAOC,eAAeb,EAAS,cACtBO,OAAO,GAGhB,IAAI2X,GAAQrY,EAAoB,EAEhCe,QAAOC,eAAeb,EAAS,SACtBe,YAAY,EACZC,IAAK,WACI,MAAOiX,GAAuBC,GWr6DvCtW,UXy6DT,IAAIuW,GAAetY,EAAoB,EAEvCe,QAAOC,eAAeb,EAAS,eACtBe,YAAY,EACZC,IAAK,WACI,MAAOiX,GAAuBE,GW76DvCvW,UXi7DT,IAAIC,GAAQhC,EAAoB,EAEhCe,QAAOC,eAAeb,EAAS,SACtBe,YAAY,EACZC,IAAK,WACI,MAAOa,GWr7DhB2D,SXw7DT5E,OAAOC,eAAeb,EAAS,YACtBe,YAAY,EACZC,IAAK,WACI,MAAOa,GW17DhBoH,YX67DTrI,OAAOC,eAAeb,EAAS,YACtBe,YAAY,EACZC,IAAK,WACI,MAAOa,GW/7DhBuH,YXk8DTxI,OAAOC,eAAeb,EAAS,QACtBe,YAAY,EACZC,IAAK,WACI,MAAOa,GWp8DhByH,OXw8DT,IAAI8O,GAAUvY,EAAoB,EAElCe,QAAOC,eAAeb,EAAS,WACtBe,YAAY,EACZC,IAAK,WACI,MAAOiX,GAAuBG,GW38DvCxW,UX+8DT,IAAIyW,GAASxY,EAAoB,EAEjCe,QAAOC,eAAeb,EAAS,SACtBe,YAAY,EACZC,IAAK,WACI,MAAOiX,GAAuBI,GWn9DvCzW,UXu9DT,IAAI0W,GAASzY,EAAoB,EAEjCe,QAAOC,eAAeb,EAAS,SACtBe,YAAY,EACZC,IAAK,WACI,MAAOiX,GAAuBK,GW39DvC1W,UX+9DT,IAAIH,GAAc5B,EAAoB,EAEtCe,QAAOC,eAAeb,EAAS,cACtBe,YAAY,EACZC,IAAK,WACI,MAAOiX,GAAuBxW,GWn+DvCG,UXu+DT,IAAI2W,GAAQ1Y,EAAoB,EAEhCe,QAAOC,eAAeb,EAAS,QACtBe,YAAY,EACZC,IAAK,WACI,MAAOiX,GAAuBM,GW3+DvC3W,UX++DT,IAAIwN,GAAUvP,EAAoB,EAElCe,QAAOC,eAAeb,EAAS,WACtBe,YAAY,EACZC,IAAK,WACI,MAAOiX,GAAuB7I,GWn/DvCxN","file":"cornerstoneMath.min.js","sourcesContent":["/*! cornerstone-math - 0.1.4 - 2017-05-19 | (c) 2017 Chris Hafey | https://github.com/chafey/cornerstoneTools */\nvar cornerstoneMath =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _quaternion = __webpack_require__(2);\n\nvar _quaternion2 = _interopRequireDefault(_quaternion);\n\nvar _math = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Based on THREE.JS\nvar Vector3 = function Vector3(x, y, z) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n};\n\nVector3.prototype = {\n\n  constructor: Vector3,\n\n  set: function set(x, y, z) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n  },\n  setX: function setX(x) {\n\n    this.x = x;\n\n    return this;\n  },\n  setY: function setY(y) {\n\n    this.y = y;\n\n    return this;\n  },\n  setZ: function setZ(z) {\n\n    this.z = z;\n\n    return this;\n  },\n  setComponent: function setComponent(index, value) {\n\n    switch (index) {\n\n      case 0:\n        this.x = value;break;\n      case 1:\n        this.y = value;break;\n      case 2:\n        this.z = value;break;\n      default:\n        throw new Error('index is out of range: ' + index);\n\n    }\n  },\n  getComponent: function getComponent(index) {\n\n    switch (index) {\n\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      case 2:\n        return this.z;\n      default:\n        throw new Error('index is out of range: ' + index);\n\n    }\n  },\n  copy: function copy(v) {\n\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n  },\n  add: function add(v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n  },\n  addScalar: function addScalar(s) {\n\n    this.x += s;\n    this.y += s;\n    this.z += s;\n\n    return this;\n  },\n  addVectors: function addVectors(a, b) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n  },\n  sub: function sub(v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n  },\n  subVectors: function subVectors(a, b) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n  },\n  multiply: function multiply(v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n\n    return this;\n  },\n  multiplyScalar: function multiplyScalar(scalar) {\n\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n\n    return this;\n  },\n  multiplyVectors: function multiplyVectors(a, b) {\n\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n  },\n\n\n  applyAxisAngle: function () {\n\n    var quaternion = void 0;\n\n    return function (axis, angle) {\n\n      if (quaternion === undefined) {\n        quaternion = new _quaternion2.default();\n      }\n\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n\n      return this;\n    };\n  }(),\n\n  applyMatrix3: function applyMatrix3(m) {\n\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n\n    return this;\n  },\n  applyMatrix4: function applyMatrix4(m) {\n\n    // Input: THREE.Matrix4 affine matrix\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n    return this;\n  },\n  applyProjection: function applyProjection(m) {\n\n    // Input: THREE.Matrix4 projection matrix\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n\n    var e = m.elements;\n    var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // Perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n\n    return this;\n  },\n  applyQuaternion: function applyQuaternion(q) {\n\n    var x = this.x;\n    var y = this.y;\n    var z = this.z;\n\n    var qx = q.x;\n    var qy = q.y;\n    var qz = q.z;\n    var qw = q.w;\n\n    // Calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z;\n\n    // Calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return this;\n  },\n  transformDirection: function transformDirection(m) {\n\n    // Input: THREE.Matrix4 affine matrix\n    // Vector interpreted as a direction\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n\n    var e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n\n    this.normalize();\n\n    return this;\n  },\n  divide: function divide(v) {\n\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n\n    return this;\n  },\n  divideScalar: function divideScalar(scalar) {\n\n    if (scalar !== 0) {\n\n      var invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  },\n  min: function min(v) {\n\n    if (this.x > v.x) {\n\n      this.x = v.x;\n    }\n\n    if (this.y > v.y) {\n\n      this.y = v.y;\n    }\n\n    if (this.z > v.z) {\n\n      this.z = v.z;\n    }\n\n    return this;\n  },\n  max: function max(v) {\n\n    if (this.x < v.x) {\n\n      this.x = v.x;\n    }\n\n    if (this.y < v.y) {\n\n      this.y = v.y;\n    }\n\n    if (this.z < v.z) {\n\n      this.z = v.z;\n    }\n\n    return this;\n  },\n  clamp: function clamp(min, max) {\n\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if (this.x < min.x) {\n\n      this.x = min.x;\n    } else if (this.x > max.x) {\n\n      this.x = max.x;\n    }\n\n    if (this.y < min.y) {\n\n      this.y = min.y;\n    } else if (this.y > max.y) {\n\n      this.y = max.y;\n    }\n\n    if (this.z < min.z) {\n\n      this.z = min.z;\n    } else if (this.z > max.z) {\n\n      this.z = max.z;\n    }\n\n    return this;\n  },\n\n\n  clampScalar: function () {\n\n    var min = void 0,\n        max = void 0;\n\n    return function (minVal, maxVal) {\n\n      if (min === undefined) {\n\n        min = new Vector3();\n        max = new Vector3();\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n\n      return this.clamp(min, max);\n    };\n  }(),\n\n  floor: function floor() {\n\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n\n    return this;\n  },\n  ceil: function ceil() {\n\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n\n    return this;\n  },\n  round: function round() {\n\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n\n    return this;\n  },\n  roundToZero: function roundToZero() {\n\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\n    return this;\n  },\n  negate: function negate() {\n\n    return this.multiplyScalar(-1);\n  },\n  dot: function dot(v) {\n\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  lengthSq: function lengthSq() {\n\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function length() {\n\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  lengthManhattan: function lengthManhattan() {\n\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function normalize() {\n\n    return this.divideScalar(this.length());\n  },\n  setLength: function setLength(l) {\n\n    var oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n  },\n  lerp: function lerp(v, alpha) {\n\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n\n    return this;\n  },\n  cross: function cross(v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\n      return this.crossVectors(v, w);\n    }\n\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n\n    return this;\n  },\n  crossVectors: function crossVectors(a, b) {\n\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n  },\n\n\n  projectOnVector: function () {\n\n    var v1 = void 0,\n        dot = void 0;\n\n    return function (vector) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(vector).normalize();\n\n      dot = this.dot(v1);\n\n      return this.copy(v1).multiplyScalar(dot);\n    };\n  }(),\n\n  projectOnPlane: function () {\n\n    var v1 = void 0;\n\n    return function (planeNormal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(v1);\n    };\n  }(),\n\n  reflect: function () {\n\n    // Reflect incident vector off plane orthogonal to normal\n    // Normal is assumed to have unit length\n\n    var v1 = void 0;\n\n    return function (normal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n\n  angleTo: function angleTo(v) {\n\n    var theta = this.dot(v) / (this.length() * v.length());\n\n    // Clamp, to handle numerical problems\n\n    return Math.acos((0, _math.clamp)(theta, -1, 1));\n  },\n  distanceTo: function distanceTo(v) {\n\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function distanceToSquared(v) {\n\n    var dx = this.x - v.x;\n    var dy = this.y - v.y;\n    var dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n  },\n  setFromMatrixPosition: function setFromMatrixPosition(m) {\n\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n\n    return this;\n  },\n  setFromMatrixScale: function setFromMatrixScale(m) {\n\n    var sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\n    var sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\n    var sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\n\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n\n    return this;\n  },\n  setFromMatrixColumn: function setFromMatrixColumn(index, matrix) {\n\n    var offset = index * 4;\n\n    var me = matrix.elements;\n\n    this.x = me[offset];\n    this.y = me[offset + 1];\n    this.z = me[offset + 2];\n\n    return this;\n  },\n  equals: function equals(v) {\n\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function fromArray(array) {\n\n    this.x = array[0];\n    this.y = array[1];\n    this.z = array[2];\n\n    return this;\n  },\n  toArray: function toArray() {\n\n    return [this.x, this.y, this.z];\n  },\n  clone: function clone() {\n\n    return new Vector3(this.x, this.y, this.z);\n  }\n};\n\nexports.default = Vector3;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Based on THREE.JS\nfunction clamp(x, a, b) {\n  return x < a ? a : x > b ? b : x;\n}\n\nfunction degToRad(degrees) {\n  var degreeToRadiansFactor = Math.PI / 180;\n\n  return degrees * degreeToRadiansFactor;\n}\n\nfunction radToDeg(radians) {\n  var radianToDegreesFactor = 180 / Math.PI;\n\n  return radians * radianToDegreesFactor;\n}\n\n// Returns sign of number\nfunction sign(x) {\n  return typeof x === 'number' ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\n\nexports.clamp = clamp;\nexports.degToRad = degToRad;\nexports.radToDeg = radToDeg;\nexports.sign = sign;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Quaternion = function Quaternion(x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n};\n\nQuaternion.prototype.setFromAxisAngle = function (axis, angle) {\n  var halfAngle = angle / 2,\n      s = Math.sin(halfAngle);\n\n  this.x = axis.x * s;\n  this.y = axis.y * s;\n  this.z = axis.z * s;\n  this.w = Math.cos(halfAngle);\n\n  return this;\n};\n\nQuaternion.prototype.multiplyQuaternions = function (a, b) {\n  var qax = a.x,\n      qay = a.y,\n      qaz = a.z,\n      qaw = a.w;\n  var qbx = b.x,\n      qby = b.y,\n      qbz = b.z,\n      qbw = b.w;\n\n  this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n  this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n  this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n  this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n  return this;\n};\n\nQuaternion.prototype.setFromRotationMatrix = function (m) {\n  var te = m.elements,\n      m11 = te[0],\n      m12 = te[4],\n      m13 = te[8],\n      m21 = te[1],\n      m22 = te[5],\n      m23 = te[9],\n      m31 = te[2],\n      m32 = te[6],\n      m33 = te[10],\n      trace = m11 + m22 + m33,\n      s = void 0;\n\n  if (trace > 0) {\n\n    s = 0.5 / Math.sqrt(trace + 1.0);\n\n    this.w = 0.25 / s;\n    this.x = (m32 - m23) * s;\n    this.y = (m13 - m31) * s;\n    this.z = (m21 - m12) * s;\n  } else if (m11 > m22 && m11 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n    this.w = (m32 - m23) / s;\n    this.x = 0.25 * s;\n    this.y = (m12 + m21) / s;\n    this.z = (m13 + m31) / s;\n  } else if (m22 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n    this.w = (m13 - m31) / s;\n    this.x = (m12 + m21) / s;\n    this.y = 0.25 * s;\n    this.z = (m23 + m32) / s;\n  } else {\n\n    s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n    this.w = (m21 - m12) / s;\n    this.x = (m13 + m31) / s;\n    this.y = (m23 + m32) / s;\n    this.z = 0.25 * s;\n  }\n\n  return this;\n};\n\nexports.default = Quaternion;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Copied from THREE.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\nvar Line3 = function () {\n  function Line3(start, end) {\n    _classCallCheck(this, Line3);\n\n    this.start = start !== undefined ? start : new cornerstoneMath.Vector3();\n    this.end = end !== undefined ? end : new cornerstoneMath.Vector3();\n  }\n\n  _createClass(Line3, [{\n    key: \"set\",\n    value: function set(start, end) {\n\n      this.start.copy(start);\n      this.end.copy(end);\n\n      return this;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(line) {\n\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n\n      return this;\n    }\n  }, {\n    key: \"center\",\n    value: function center(optionalTarget) {\n\n      var result = optionalTarget || new cornerstoneMath.Vector3();\n\n      return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n    }\n  }, {\n    key: \"delta\",\n    value: function delta(optionalTarget) {\n\n      var result = optionalTarget || new cornerstoneMath.Vector3();\n\n      return result.subVectors(this.end, this.start);\n    }\n  }, {\n    key: \"distanceSq\",\n    value: function distanceSq() {\n\n      return this.start.distanceToSquared(this.end);\n    }\n  }, {\n    key: \"distance\",\n    value: function distance() {\n\n      return this.start.distanceTo(this.end);\n    }\n  }, {\n    key: \"at\",\n    value: function at(t, optionalTarget) {\n\n      var result = optionalTarget || new cornerstoneMath.Vector3();\n\n      return this.delta(result).multiplyScalar(t).add(this.start);\n    }\n  }, {\n    key: \"closestPointToPointParameter\",\n    value: function closestPointToPointParameter() {\n\n      var startP = new cornerstoneMath.Vector3();\n      var startEnd = new cornerstoneMath.Vector3();\n\n      return function (point, clampToLine) {\n\n        startP.subVectors(point, this.start);\n        startEnd.subVectors(this.end, this.start);\n\n        var startEnd2 = startEnd.dot(startEnd);\n        var startEnd_startP = startEnd.dot(startP);\n\n        var t = startEnd_startP / startEnd2;\n\n        if (clampToLine) {\n\n          t = cornerstoneMath.Math.clamp(t, 0, 1);\n        }\n\n        return t;\n      };\n    }\n  }, {\n    key: \"closestPointToPoint\",\n    value: function closestPointToPoint(point, clampToLine, optionalTarget) {\n\n      var t = this.closestPointToPointParameter(point, clampToLine);\n\n      var result = optionalTarget || new cornerstoneMath.Vector3();\n\n      return this.delta(result).multiplyScalar(t).add(this.start);\n    }\n  }, {\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix) {\n\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(line) {\n\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n\n      return new cornerstoneMath.Line3().copy(this);\n    }\n  }, {\n    key: \"intersectLine\",\n    value: function intersectLine(line) {\n      // http://stackoverflow.com/questions/2316490/the-algorithm-to-find-the-point-of-intersection-of-two-3d-line-segment/10288710#10288710\n      var da = this.end.clone().sub(this.start);\n      var db = line.end.clone().sub(line.start);\n      var dc = line.start.clone().sub(this.start);\n\n      var daCrossDb = da.clone().cross(db);\n      var dcCrossDb = dc.clone().cross(db);\n\n      if (dc.dot(da) === 0) {\n        // Lines are not coplanar, stop here\n        return;\n      }\n\n      var s = dcCrossDb.dot(daCrossDb) / daCrossDb.lengthSq();\n\n      // Make sure we have an intersection\n      if (s > 1.0 || isNaN(s)) {\n        return;\n      }\n\n      var intersection = this.start.clone().add(da.clone().multiplyScalar(s));\n      var distanceTest = intersection.clone().sub(line.start).lengthSq() + intersection.clone().sub(line.end).lengthSq();\n\n      if (distanceTest <= line.distanceSq()) {\n        return intersection;\n      }\n\n      return;\n    }\n  }]);\n\n  return Line3;\n}();\n\nexports.default = Line3;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Based on  http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfunction sqr(x) {\n  return x * x;\n}\n\nfunction dist2(v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\n}\n\nfunction distanceToPointSquared(lineSegment, point) {\n  var l2 = dist2(lineSegment.start, lineSegment.end);\n\n  if (l2 === 0) {\n    return dist2(point, lineSegment.start);\n  }\n  var t = ((point.x - lineSegment.start.x) * (lineSegment.end.x - lineSegment.start.x) + (point.y - lineSegment.start.y) * (lineSegment.end.y - lineSegment.start.y)) / l2;\n\n  if (t < 0) {\n    return dist2(point, lineSegment.start);\n  }\n  if (t > 1) {\n    return dist2(point, lineSegment.end);\n  }\n\n  var pt = {\n    x: lineSegment.start.x + t * (lineSegment.end.x - lineSegment.start.x),\n    y: lineSegment.start.y + t * (lineSegment.end.y - lineSegment.start.y)\n  };\n\n  return dist2(point, pt);\n}\n\nfunction distanceToPoint(lineSegment, point) {\n  return Math.sqrt(distanceToPointSquared(lineSegment, point));\n}\n\n// Returns intersection points of two lines\nfunction intersectLine(lineSegment1, lineSegment2) {\n  var intersectionPoint = {};\n\n  var x1 = lineSegment1.start.x,\n      y1 = lineSegment1.start.y,\n      x2 = lineSegment1.end.x,\n      y2 = lineSegment1.end.y,\n      x3 = lineSegment2.start.x,\n      y3 = lineSegment2.start.y,\n      x4 = lineSegment2.end.x,\n      y4 = lineSegment2.end.y;\n\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0; // Coefficients of line equations\n  var r1 = void 0,\n      r2 = void 0,\n      r3 = void 0,\n      r4 = void 0; // Sign values\n\n  var denom = void 0,\n      num = void 0; // Intermediate values\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2;\n\n  // Compute r3 and r4\n  r3 = a1 * x3 + b1 * y3 + c1;\n  r4 = a1 * x4 + b1 * y4 + c1;\n\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n   * same side of line 1, the line segments do not intersect.\n   */\n\n  if (r3 !== 0 && r4 !== 0 && cornerstoneMath.sign(r3) === cornerstoneMath.sign(r4)) {\n    return;\n  }\n\n  /* Compute a2, b2, c2 */\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4;\n\n  /* Compute r1 and r2 */\n\n  r1 = a2 * x1 + b2 * y1 + c2;\n  r2 = a2 * x2 + b2 * y2 + c2;\n\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n   * on same side of second line segment, the line segments do\n   * not intersect.\n   */\n\n  if (r1 !== 0 && r2 !== 0 && cornerstoneMath.sign(r1) === cornerstoneMath.sign(r2)) {\n    return;\n  }\n\n  /* Line segments intersect: compute intersection point.\n   */\n\n  denom = a1 * b2 - a2 * b1;\n\n  /* The denom/2 is to get rounding instead of truncating.  It\n   * is added or subtracted to the numerator, depending upon the\n   * sign of the numerator.\n   */\n\n  num = b1 * c2 - b2 * c1;\n  var x = parseFloat(num / denom);\n\n  num = a2 * c1 - a1 * c2;\n  var y = parseFloat(num / denom);\n\n  intersectionPoint.x = x;\n  intersectionPoint.y = y;\n\n  return intersectionPoint;\n}\n\n// Module exports\nvar lineSegment = {\n  distanceToPoint: distanceToPoint,\n  intersectLine: intersectLine\n};\n\nexports.default = lineSegment;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _vector = __webpack_require__(0);\n\nvar _vector2 = _interopRequireDefault(_vector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Based on THREE.JS\nvar Matrix4 = function Matrix4(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n  this.elements = new Float32Array(16);\n\n  // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\n  //   We should not support semi specification of Matrix4, it is just weird.\n\n  var te = this.elements;\n\n  te[0] = n11 !== undefined ? n11 : 1;te[4] = n12 || 0;te[8] = n13 || 0;te[12] = n14 || 0;\n  te[1] = n21 || 0;te[5] = n22 !== undefined ? n22 : 1;te[9] = n23 || 0;te[13] = n24 || 0;\n  te[2] = n31 || 0;te[6] = n32 || 0;te[10] = n33 !== undefined ? n33 : 1;te[14] = n34 || 0;\n  te[3] = n41 || 0;te[7] = n42 || 0;te[11] = n43 || 0;te[15] = n44 !== undefined ? n44 : 1;\n};\n\nMatrix4.prototype.makeRotationFromQuaternion = function (q) {\n  var te = this.elements;\n\n  var x = q.x,\n      y = q.y,\n      z = q.z,\n      w = q.w;\n  var x2 = x + x,\n      y2 = y + y,\n      z2 = z + z;\n  var xx = x * x2,\n      xy = x * y2,\n      xz = x * z2;\n  var yy = y * y2,\n      yz = y * z2,\n      zz = z * z2;\n  var wx = w * x2,\n      wy = w * y2,\n      wz = w * z2;\n\n  te[0] = 1 - (yy + zz);\n  te[4] = xy - wz;\n  te[8] = xz + wy;\n\n  te[1] = xy + wz;\n  te[5] = 1 - (xx + zz);\n  te[9] = yz - wx;\n\n  te[2] = xz - wy;\n  te[6] = yz + wx;\n  te[10] = 1 - (xx + yy);\n\n  // Last column\n  te[3] = 0;\n  te[7] = 0;\n  te[11] = 0;\n\n  // Bottom row\n  te[12] = 0;\n  te[13] = 0;\n  te[14] = 0;\n  te[15] = 1;\n\n  return this;\n};\n\nMatrix4.prototype.multiplyMatrices = function (a, b) {\n  var ae = a.elements;\n  var be = b.elements;\n  var te = this.elements;\n\n  var a11 = ae[0],\n      a12 = ae[4],\n      a13 = ae[8],\n      a14 = ae[12];\n  var a21 = ae[1],\n      a22 = ae[5],\n      a23 = ae[9],\n      a24 = ae[13];\n  var a31 = ae[2],\n      a32 = ae[6],\n      a33 = ae[10],\n      a34 = ae[14];\n  var a41 = ae[3],\n      a42 = ae[7],\n      a43 = ae[11],\n      a44 = ae[15];\n\n  var b11 = be[0],\n      b12 = be[4],\n      b13 = be[8],\n      b14 = be[12];\n  var b21 = be[1],\n      b22 = be[5],\n      b23 = be[9],\n      b24 = be[13];\n  var b31 = be[2],\n      b32 = be[6],\n      b33 = be[10],\n      b34 = be[14];\n  var b41 = be[3],\n      b42 = be[7],\n      b43 = be[11],\n      b44 = be[15];\n\n  te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n  te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n  te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n  te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n  te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n  te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n  te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n  te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n  te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n  te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n  te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n  te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n  te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n  te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n  te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n  te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n  return this;\n};\n\nMatrix4.prototype.multiply = function (m, n) {\n\n  if (n !== undefined) {\n\n    console.warn('DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\n    return this.multiplyMatrices(m, n);\n  }\n\n  return this.multiplyMatrices(this, m);\n};\n\nMatrix4.prototype.getInverse = function (m, throwOnInvertible) {\n\n  // Based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n  var te = this.elements;\n  var me = m.elements;\n\n  var n11 = me[0],\n      n12 = me[4],\n      n13 = me[8],\n      n14 = me[12];\n  var n21 = me[1],\n      n22 = me[5],\n      n23 = me[9],\n      n24 = me[13];\n  var n31 = me[2],\n      n32 = me[6],\n      n33 = me[10],\n      n34 = me[14];\n  var n41 = me[3],\n      n42 = me[7],\n      n43 = me[11],\n      n44 = me[15];\n\n  te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n  te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n  te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n  te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n  te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n  te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n  te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n  te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n  te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n  te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n  te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n  te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n  te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n  te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n  te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n  te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n\n  var det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n  if (det === 0) {\n\n    var msg = 'Matrix4.getInverse(): can\\'t invert matrix, determinant is 0';\n\n    if (throwOnInvertible || false) {\n\n      throw new Error(msg);\n    } else {\n\n      console.warn(msg);\n    }\n\n    this.identity();\n\n    return this;\n  }\n\n  this.multiplyScalar(1 / det);\n\n  return this;\n};\n\nMatrix4.prototype.applyToVector3Array = function () {\n\n  var v1 = new _vector2.default();\n\n  return function (array, offset, length) {\n\n    if (offset === undefined) {\n      offset = 0;\n    }\n    if (length === undefined) {\n      length = array.length;\n    }\n\n    for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n\n      v1.x = array[j];\n      v1.y = array[j + 1];\n      v1.z = array[j + 2];\n\n      v1.applyMatrix4(this);\n\n      array[j] = v1.x;\n      array[j + 1] = v1.y;\n      array[j + 2] = v1.z;\n    }\n\n    return array;\n  };\n};\n\nMatrix4.prototype.makeTranslation = function (x, y, z) {\n\n  this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\n  return this;\n};\nMatrix4.prototype.multiplyScalar = function (s) {\n\n  var te = this.elements;\n\n  te[0] *= s;te[4] *= s;te[8] *= s;te[12] *= s;\n  te[1] *= s;te[5] *= s;te[9] *= s;te[13] *= s;\n  te[2] *= s;te[6] *= s;te[10] *= s;te[14] *= s;\n  te[3] *= s;te[7] *= s;te[11] *= s;te[15] *= s;\n\n  return this;\n};\nMatrix4.prototype.set = function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\n  var te = this.elements;\n\n  te[0] = n11;te[4] = n12;te[8] = n13;te[12] = n14;\n  te[1] = n21;te[5] = n22;te[9] = n23;te[13] = n24;\n  te[2] = n31;te[6] = n32;te[10] = n33;te[14] = n34;\n  te[3] = n41;te[7] = n42;te[11] = n43;te[15] = n44;\n\n  return this;\n};\n\nMatrix4.prototype.makeScale = function (x, y, z) {\n\n  this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\n  return this;\n};\n\nexports.default = Matrix4;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _vector = __webpack_require__(0);\n\nvar _vector2 = _interopRequireDefault(_vector);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copied from Three.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\nvar Plane = function Plane(normal, constant) {\n\n  this.normal = normal !== undefined ? normal : new _vector2.default(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n};\n\nPlane.prototype = {\n\n  constructor: Plane,\n\n  set: function set(normal, constant) {\n\n    this.normal.copy(normal);\n    this.constant = constant;\n\n    return this;\n  },\n  setComponents: function setComponents(x, y, z, w) {\n\n    this.normal.set(x, y, z);\n    this.constant = w;\n\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function setFromNormalAndCoplanarPoint(normal, point) {\n\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // Must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n  },\n\n\n  setFromCoplanarPoints: function () {\n\n    var v1 = new _vector2.default();\n    var v2 = new _vector2.default();\n\n    return function (a, b, c) {\n\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize();\n\n      // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n\n      return this;\n    };\n  }(),\n\n  copy: function copy(plane) {\n\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n\n    return this;\n  },\n  normalize: function normalize() {\n\n    // Note: will lead to a divide by zero if the plane is invalid.\n\n    var inverseNormalLength = 1.0 / this.normal.length();\n\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n\n    return this;\n  },\n  negate: function negate() {\n\n    this.constant *= -1;\n    this.normal.negate();\n\n    return this;\n  },\n  distanceToPoint: function distanceToPoint(point) {\n\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function distanceToSphere(sphere) {\n\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function projectPoint(point, optionalTarget) {\n\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n  },\n  orthoPoint: function orthoPoint(point, optionalTarget) {\n\n    var perpendicularMagnitude = this.distanceToPoint(point);\n\n    var result = optionalTarget || new _vector2.default();\n\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n  },\n  isIntersectionLine: function isIntersectionLine(line) {\n\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n\n\n  intersectLine: function () {\n\n    var v1 = new _vector2.default();\n\n    return function (line, optionalTarget) {\n\n      var result = optionalTarget || new _vector2.default();\n\n      var direction = line.delta(v1);\n\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n\n        // Line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n\n          return result.copy(line.start);\n        }\n\n        // Unsure if this is the correct method to handle this case.\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n\n        return undefined;\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n\n  intersectPlane: function intersectPlane(targetPlane) {\n    // Returns the intersection line between two planes\n    var direction = this.normal.clone().cross(targetPlane.normal);\n    var origin = new _vector2.default();\n    var intersectionData = {\n      origin: origin,\n      direction: direction\n    };\n\n    // If the planes are parallel, return an empty vector for the\n    // Intersection line\n    if (this.normal.clone().cross(targetPlane.normal).length < 1e-10) {\n      intersectionData.direction = new _vector2.default();\n\n      return intersectionData;\n    }\n\n    var h1 = this.constant;\n    var h2 = targetPlane.constant;\n    var n1dotn2 = this.normal.clone().dot(targetPlane.normal);\n\n    var c1 = -(h1 - h2 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n    var c2 = -(h2 - h1 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n\n    intersectionData.origin = this.normal.clone().multiplyScalar(c1).add(targetPlane.normal.clone().multiplyScalar(c2));\n\n    return intersectionData;\n  },\n  coplanarPoint: function coplanarPoint(optionalTarget) {\n\n    var result = optionalTarget || new _vector2.default();\n\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  translate: function translate(offset) {\n\n    this.constant = this.constant - offset.dot(this.normal);\n\n    return this;\n  },\n  equals: function equals(plane) {\n\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  },\n  clone: function clone() {\n\n    return new Plane().copy(this);\n  }\n};\n\nexports.default = Plane;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction pageToPoint(e) {\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n\nfunction subtract(lhs, rhs) {\n  return {\n    x: lhs.x - rhs.x,\n    y: lhs.y - rhs.y\n  };\n}\n\nfunction copy(point) {\n  return {\n    x: point.x,\n    y: point.y\n  };\n}\n\nfunction distance(from, to) {\n  return Math.sqrt(distanceSquared(from, to));\n}\n\nfunction distanceSquared(from, to) {\n  var delta = subtract(from, to);\n\n  return delta.x * delta.x + delta.y * delta.y;\n}\n\nfunction insideRect(point, rect) {\n  if (point.x < rect.left || point.x > rect.left + rect.width || point.y < rect.top || point.y > rect.top + rect.height) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Returns the closest source point to a target point\n * given an array of source points.\n *\n * @param sources An Array of source Points\n * @param target The target Point\n * @returns Point The closest point from the points array\n */\nfunction findClosestPoint(sources, target) {\n  var distances = [];\n  var minDistance = void 0;\n\n  sources.forEach(function (source, index) {\n    var distance = cornerstoneMath.point.distance(source, target);\n\n    distances.push(distance);\n\n    if (index === 0) {\n      minDistance = distance;\n    } else {\n      minDistance = Math.min(distance, minDistance);\n    }\n  });\n\n  var index = distances.indexOf(minDistance);\n\n  return sources[index];\n}\n\nvar point = {\n  subtract: subtract,\n  copy: copy,\n  pageToPoint: pageToPoint,\n  distance: distance,\n  distanceSquared: distanceSquared,\n  insideRect: insideRect,\n  findClosestPoint: findClosestPoint\n};\n\nexports.default = point;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction rectToLineSegments(rect) {\n  var top = {\n    start: {\n      x: rect.left,\n      y: rect.top\n    },\n    end: {\n      x: rect.left + rect.width,\n      y: rect.top\n\n    }\n  };\n  var right = {\n    start: {\n      x: rect.left + rect.width,\n      y: rect.top\n    },\n    end: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n\n    }\n  };\n  var bottom = {\n    start: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n    },\n    end: {\n      x: rect.left,\n      y: rect.top + rect.height\n\n    }\n  };\n  var left = {\n    start: {\n      x: rect.left,\n      y: rect.top + rect.height\n    },\n    end: {\n      x: rect.left,\n      y: rect.top\n\n    }\n  };\n  var lineSegments = [top, right, bottom, left];\n\n  return lineSegments;\n}\n\nfunction distanceToPoint(rect, point) {\n  var minDistance = 655535;\n  var lineSegments = rectToLineSegments(rect);\n\n  lineSegments.forEach(function (lineSegment) {\n    var distance = cornerstoneMath.lineSegment.distanceToPoint(lineSegment, point);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n    }\n  });\n\n  return minDistance;\n}\n\n// Returns top-left and bottom-right points of the rectangle\nfunction rectToPoints(rect) {\n  var rectPoints = {\n    topLeft: {\n      x: rect.left,\n      y: rect.top\n    },\n    bottomRight: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n    }\n  };\n\n  return rectPoints;\n}\n\n// Returns whether two non-rotated rectangles are intersected\nfunction doesIntersect(rect1, rect2) {\n  var intersectLeftRight = void 0;\n  var intersectTopBottom = void 0;\n\n  var rect1Points = rectToPoints(rect1);\n  var rect2Points = rectToPoints(rect2);\n\n  if (rect1.width >= 0) {\n    if (rect2.width >= 0) {\n      intersectLeftRight = !(rect1Points.bottomRight.x <= rect2Points.topLeft.x || rect2Points.bottomRight.x <= rect1Points.topLeft.x);\n    } else {\n      intersectLeftRight = !(rect1Points.bottomRight.x <= rect2Points.bottomRight.x || rect2Points.topLeft.x <= rect1Points.topLeft.x);\n    }\n  } else if (rect2.width >= 0) {\n    intersectLeftRight = !(rect1Points.topLeft.x <= rect2Points.topLeft.x || rect2Points.bottomRight.x <= rect1Points.bottomRight.x);\n  } else {\n    intersectLeftRight = !(rect1Points.topLeft.x <= rect2Points.bottomRight.x || rect2Points.topLeft.x <= rect1Points.bottomRight.x);\n  }\n\n  if (rect1.height >= 0) {\n    if (rect2.height >= 0) {\n      intersectTopBottom = !(rect1Points.bottomRight.y <= rect2Points.topLeft.y || rect2Points.bottomRight.y <= rect1Points.topLeft.y);\n    } else {\n      intersectTopBottom = !(rect1Points.bottomRight.y <= rect2Points.bottomRight.y || rect2Points.topLeft.y <= rect1Points.topLeft.y);\n    }\n  } else if (rect2.height >= 0) {\n    intersectTopBottom = !(rect1Points.topLeft.y <= rect2Points.topLeft.y || rect2Points.bottomRight.y <= rect1Points.bottomRight.y);\n  } else {\n    intersectTopBottom = !(rect1Points.topLeft.y <= rect2Points.bottomRight.y || rect2Points.top <= rect1Points.bottomRight.y);\n  }\n\n  return intersectLeftRight && intersectTopBottom;\n}\n\n// Returns intersection points of two non-rotated rectangles\nfunction getIntersectionRect(rect1, rect2) {\n  var intersectRect = {\n    topLeft: {},\n    bottomRight: {}\n  };\n\n  if (!doesIntersect(rect1, rect2)) {\n    return;\n  }\n\n  var rect1Points = rectToPoints(rect1);\n  var rect2Points = rectToPoints(rect2);\n\n  if (rect1.width >= 0) {\n    if (rect2.width >= 0) {\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.topLeft.x);\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n    } else {\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n    }\n  } else if (rect2.width >= 0) {\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n  } else {\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.topLeft.x);\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n  }\n\n  if (rect1.height >= 0) {\n    if (rect2.height >= 0) {\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.topLeft.y);\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n    } else {\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n    }\n  } else if (rect2.height >= 0) {\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n  } else {\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.topLeft.y);\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n  }\n\n  // Returns top-left and bottom-right points of intersected rectangle\n  return intersectRect;\n}\n\nvar rect = {\n  distanceToPoint: distanceToPoint,\n  getIntersectionRect: getIntersectionRect\n};\n\nexports.default = rect;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n         value: true\n});\n\nvar _Line = __webpack_require__(3);\n\nObject.defineProperty(exports, 'Line3', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_Line).default;\n         }\n});\n\nvar _lineSegment = __webpack_require__(4);\n\nObject.defineProperty(exports, 'lineSegment', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_lineSegment).default;\n         }\n});\n\nvar _math = __webpack_require__(1);\n\nObject.defineProperty(exports, 'clamp', {\n         enumerable: true,\n         get: function get() {\n                  return _math.clamp;\n         }\n});\nObject.defineProperty(exports, 'degToRad', {\n         enumerable: true,\n         get: function get() {\n                  return _math.degToRad;\n         }\n});\nObject.defineProperty(exports, 'radToDeg', {\n         enumerable: true,\n         get: function get() {\n                  return _math.radToDeg;\n         }\n});\nObject.defineProperty(exports, 'sign', {\n         enumerable: true,\n         get: function get() {\n                  return _math.sign;\n         }\n});\n\nvar _matrix = __webpack_require__(5);\n\nObject.defineProperty(exports, 'Matrix4', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_matrix).default;\n         }\n});\n\nvar _plane = __webpack_require__(6);\n\nObject.defineProperty(exports, 'plane', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_plane).default;\n         }\n});\n\nvar _point = __webpack_require__(7);\n\nObject.defineProperty(exports, 'point', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_point).default;\n         }\n});\n\nvar _quaternion = __webpack_require__(2);\n\nObject.defineProperty(exports, 'quaternion', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_quaternion).default;\n         }\n});\n\nvar _rect = __webpack_require__(8);\n\nObject.defineProperty(exports, 'rect', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_rect).default;\n         }\n});\n\nvar _vector = __webpack_require__(0);\n\nObject.defineProperty(exports, 'Vector3', {\n         enumerable: true,\n         get: function get() {\n                  return _interopRequireDefault(_vector).default;\n         }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cornerstoneMath.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6a9df2e5de301c0d57a6","import Quaternion from './quaternion.js';\nimport { clamp } from './math.js';\n\n// Based on THREE.JS\nconst Vector3 = function (x, y, z) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n\n};\n\nVector3.prototype = {\n\n  constructor: Vector3,\n\n  set (x, y, z) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n\n  },\n\n  setX (x) {\n\n    this.x = x;\n\n    return this;\n\n  },\n\n  setY (y) {\n\n    this.y = y;\n\n    return this;\n\n  },\n\n  setZ (z) {\n\n    this.z = z;\n\n    return this;\n\n  },\n\n  setComponent (index, value) {\n\n    switch (index) {\n\n    case 0: this.x = value; break;\n    case 1: this.y = value; break;\n    case 2: this.z = value; break;\n    default: throw new Error(`index is out of range: ${index}`);\n\n    }\n\n  },\n\n  getComponent (index) {\n\n    switch (index) {\n\n    case 0: return this.x;\n    case 1: return this.y;\n    case 2: return this.z;\n    default: throw new Error(`index is out of range: ${index}`);\n\n    }\n\n  },\n\n  copy (v) {\n\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n\n  },\n\n  add (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\n      return this.addVectors(v, w);\n\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n\n  },\n\n  addScalar (s) {\n\n    this.x += s;\n    this.y += s;\n    this.z += s;\n\n    return this;\n\n  },\n\n  addVectors (a, b) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n\n  },\n\n  sub (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\n      return this.subVectors(v, w);\n\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n\n  },\n\n  subVectors (a, b) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n\n  },\n\n  multiply (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\n      return this.multiplyVectors(v, w);\n\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n\n    return this;\n\n  },\n\n  multiplyScalar (scalar) {\n\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n\n    return this;\n\n  },\n\n  multiplyVectors (a, b) {\n\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n\n  },\n\n\n  applyAxisAngle: (function () {\n\n    let quaternion;\n\n    return function (axis, angle) {\n\n      if (quaternion === undefined) {\n        quaternion = new Quaternion();\n      }\n\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n\n      return this;\n\n    };\n\n  })(),\n\n  applyMatrix3 (m) {\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n\n    return this;\n\n  },\n\n  applyMatrix4 (m) {\n\n        // Input: THREE.Matrix4 affine matrix\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n    return this;\n\n  },\n\n  applyProjection (m) {\n\n        // Input: THREE.Matrix4 projection matrix\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n    const d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // Perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n\n    return this;\n\n  },\n\n  applyQuaternion (q) {\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    const qx = q.x;\n    const qy = q.y;\n    const qz = q.z;\n    const qw = q.w;\n\n        // Calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n        // Calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return this;\n\n  },\n\n  transformDirection (m) {\n\n        // Input: THREE.Matrix4 affine matrix\n        // Vector interpreted as a direction\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n\n    this.normalize();\n\n    return this;\n\n  },\n\n  divide (v) {\n\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n\n    return this;\n\n  },\n\n  divideScalar (scalar) {\n\n    if (scalar !== 0) {\n\n      const invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n\n    }\n\n    return this;\n\n  },\n\n  min (v) {\n\n    if (this.x > v.x) {\n\n      this.x = v.x;\n\n    }\n\n    if (this.y > v.y) {\n\n      this.y = v.y;\n\n    }\n\n    if (this.z > v.z) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  max (v) {\n\n    if (this.x < v.x) {\n\n      this.x = v.x;\n\n    }\n\n    if (this.y < v.y) {\n\n      this.y = v.y;\n\n    }\n\n    if (this.z < v.z) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  clamp (min, max) {\n\n        // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if (this.x < min.x) {\n\n      this.x = min.x;\n\n    } else if (this.x > max.x) {\n\n      this.x = max.x;\n\n    }\n\n    if (this.y < min.y) {\n\n      this.y = min.y;\n\n    } else if (this.y > max.y) {\n\n      this.y = max.y;\n\n    }\n\n    if (this.z < min.z) {\n\n      this.z = min.z;\n\n    } else if (this.z > max.z) {\n\n      this.z = max.z;\n\n    }\n\n    return this;\n\n  },\n\n  clampScalar: (function () {\n\n    let min, max;\n\n    return function (minVal, maxVal) {\n\n      if (min === undefined) {\n\n        min = new Vector3();\n        max = new Vector3();\n\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n\n      return this.clamp(min, max);\n\n    };\n\n  })(),\n\n  floor () {\n\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n\n    return this;\n\n  },\n\n  ceil () {\n\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n\n    return this;\n\n  },\n\n  round () {\n\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n\n    return this;\n\n  },\n\n  roundToZero () {\n\n    this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n\n    return this;\n\n  },\n\n  negate () {\n\n    return this.multiplyScalar(-1);\n\n  },\n\n  dot (v) {\n\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n\n  },\n\n  lengthSq () {\n\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n\n  },\n\n  length () {\n\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\n  },\n\n  lengthManhattan () {\n\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\n  },\n\n  normalize () {\n\n    return this.divideScalar(this.length());\n\n  },\n\n  setLength (l) {\n\n    const oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n\n  },\n\n  lerp (v, alpha) {\n\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n\n    return this;\n\n  },\n\n  cross (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\n      return this.crossVectors(v, w);\n\n    }\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n\n    return this;\n\n  },\n\n  crossVectors (a, b) {\n\n    let ax = a.x,\n      ay = a.y,\n      az = a.z;\n    let bx = b.x,\n      by = b.y,\n      bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n\n  },\n\n  projectOnVector: (function () {\n\n    let v1, dot;\n\n    return function (vector) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(vector).normalize();\n\n      dot = this.dot(v1);\n\n      return this.copy(v1).multiplyScalar(dot);\n\n    };\n\n  })(),\n\n  projectOnPlane: (function () {\n\n    let v1;\n\n    return function (planeNormal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(v1);\n\n    };\n\n  })(),\n\n  reflect: (function () {\n\n        // Reflect incident vector off plane orthogonal to normal\n        // Normal is assumed to have unit length\n\n    let v1;\n\n    return function (normal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\n    };\n\n  })(),\n\n  angleTo (v) {\n\n    const theta = this.dot(v) / (this.length() * v.length());\n\n        // Clamp, to handle numerical problems\n\n    return Math.acos(clamp(theta, -1, 1));\n\n  },\n\n  distanceTo (v) {\n\n    return Math.sqrt(this.distanceToSquared(v));\n\n  },\n\n  distanceToSquared (v) {\n\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n    const dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n  },\n\n  setFromMatrixPosition (m) {\n\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n\n    return this;\n\n  },\n\n  setFromMatrixScale (m) {\n\n    const sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\n    const sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\n    const sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\n\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n\n    return this;\n  },\n\n  setFromMatrixColumn (index, matrix) {\n\n    const offset = index * 4;\n\n    const me = matrix.elements;\n\n    this.x = me[offset];\n    this.y = me[offset + 1];\n    this.z = me[offset + 2];\n\n    return this;\n\n  },\n\n  equals (v) {\n\n    return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n\n  },\n\n  fromArray (array) {\n\n    this.x = array[0];\n    this.y = array[1];\n    this.z = array[2];\n\n    return this;\n\n  },\n\n  toArray () {\n\n    return [this.x, this.y, this.z];\n\n  },\n\n  clone () {\n\n    return new Vector3(this.x, this.y, this.z);\n\n  }\n\n};\n\nexport default Vector3;\n\n\n\n// WEBPACK FOOTER //\n// ./vector3.js","// Based on THREE.JS\nfunction clamp (x, a, b) {\n  return (x < a) ? a : ((x > b) ? b : x);\n}\n\nfunction degToRad (degrees) {\n  const degreeToRadiansFactor = Math.PI / 180;\n\n\n  return degrees * degreeToRadiansFactor;\n}\n\nfunction radToDeg (radians) {\n  const radianToDegreesFactor = 180 / Math.PI;\n\n\n  return radians * radianToDegreesFactor;\n}\n\n// Returns sign of number\nfunction sign (x) {\n  return typeof x === 'number' ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\n\nexport {\n  clamp,\n  degToRad,\n  radToDeg,\n  sign\n};\n\n\n\n// WEBPACK FOOTER //\n// ./math.js","const Quaternion = function Quaternion (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = (w !== undefined) ? w : 1;\n};\n\nQuaternion.prototype.setFromAxisAngle = function (axis, angle) {\n  let halfAngle = angle / 2,\n    s = Math.sin(halfAngle);\n\n  this.x = axis.x * s;\n  this.y = axis.y * s;\n  this.z = axis.z * s;\n  this.w = Math.cos(halfAngle);\n\n  return this;\n};\n\nQuaternion.prototype.multiplyQuaternions = function (a, b) {\n  let qax = a.x,\n    qay = a.y,\n    qaz = a.z,\n    qaw = a.w;\n  let qbx = b.x,\n    qby = b.y,\n    qbz = b.z,\n    qbw = b.w;\n\n  this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n  this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n  this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n  this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n  return this;\n};\n\nQuaternion.prototype.setFromRotationMatrix = function (m) {\n  let te = m.elements,\n\n    m11 = te[0],\n    m12 = te[4],\n    m13 = te[8],\n    m21 = te[1],\n    m22 = te[5],\n    m23 = te[9],\n    m31 = te[2],\n    m32 = te[6],\n    m33 = te[10],\n\n    trace = m11 + m22 + m33,\n    s;\n\n  if (trace > 0) {\n\n    s = 0.5 / Math.sqrt(trace + 1.0);\n\n    this.w = 0.25 / s;\n    this.x = (m32 - m23) * s;\n    this.y = (m13 - m31) * s;\n    this.z = (m21 - m12) * s;\n\n  } else if (m11 > m22 && m11 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n    this.w = (m32 - m23) / s;\n    this.x = 0.25 * s;\n    this.y = (m12 + m21) / s;\n    this.z = (m13 + m31) / s;\n\n  } else if (m22 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n    this.w = (m13 - m31) / s;\n    this.x = (m12 + m21) / s;\n    this.y = 0.25 * s;\n    this.z = (m23 + m32) / s;\n\n  } else {\n\n    s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n    this.w = (m21 - m12) / s;\n    this.x = (m13 + m31) / s;\n    this.y = (m23 + m32) / s;\n    this.z = 0.25 * s;\n\n  }\n\n  return this;\n};\n\nexport default Quaternion;\n\n\n\n// WEBPACK FOOTER //\n// ./quaternion.js","// Copied from THREE.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\n\nclass Line3 {\n  constructor (start, end) {\n\n    this.start = (start !== undefined) ? start : new cornerstoneMath.Vector3();\n    this.end = (end !== undefined) ? end : new cornerstoneMath.Vector3();\n\n  }\n\n  set (start, end) {\n\n    this.start.copy(start);\n    this.end.copy(end);\n\n    return this;\n\n  }\n\n  copy (line) {\n\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n\n    return this;\n\n  }\n\n  center (optionalTarget) {\n\n    const result = optionalTarget || new cornerstoneMath.Vector3();\n\n\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n\n  }\n\n  delta (optionalTarget) {\n\n    const result = optionalTarget || new cornerstoneMath.Vector3();\n\n\n    return result.subVectors(this.end, this.start);\n\n  }\n\n  distanceSq () {\n\n    return this.start.distanceToSquared(this.end);\n\n  }\n\n  distance () {\n\n    return this.start.distanceTo(this.end);\n\n  }\n\n  at (t, optionalTarget) {\n\n    const result = optionalTarget || new cornerstoneMath.Vector3();\n\n    return this.delta(result).multiplyScalar(t).add(this.start);\n\n  }\n\n  closestPointToPointParameter () {\n\n    const startP = new cornerstoneMath.Vector3();\n    const startEnd = new cornerstoneMath.Vector3();\n\n    return function (point, clampToLine) {\n\n      startP.subVectors(point, this.start);\n      startEnd.subVectors(this.end, this.start);\n\n      const startEnd2 = startEnd.dot(startEnd);\n      const startEnd_startP = startEnd.dot(startP);\n\n      let t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n\n        t = cornerstoneMath.Math.clamp(t, 0, 1);\n\n      }\n\n      return t;\n\n    };\n\n  }\n\n  closestPointToPoint (point, clampToLine, optionalTarget) {\n\n    const t = this.closestPointToPointParameter(point, clampToLine);\n\n    const result = optionalTarget || new cornerstoneMath.Vector3();\n\n    return this.delta(result).multiplyScalar(t).add(this.start);\n\n  }\n\n  applyMatrix4 (matrix) {\n\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n\n    return this;\n\n  }\n\n  equals (line) {\n\n    return line.start.equals(this.start) && line.end.equals(this.end);\n\n  }\n\n  clone () {\n\n    return new cornerstoneMath.Line3().copy(this);\n\n  }\n\n  intersectLine (line) {\n        // http://stackoverflow.com/questions/2316490/the-algorithm-to-find-the-point-of-intersection-of-two-3d-line-segment/10288710#10288710\n    const da = this.end.clone().sub(this.start);\n    const db = line.end.clone().sub(line.start);\n    const dc = line.start.clone().sub(this.start);\n\n    const daCrossDb = da.clone().cross(db);\n    const dcCrossDb = dc.clone().cross(db);\n\n    if (dc.dot(da) === 0) {\n            // Lines are not coplanar, stop here\n      return;\n    }\n\n    const s = dcCrossDb.dot(daCrossDb) / daCrossDb.lengthSq();\n\n        // Make sure we have an intersection\n    if (s > 1.0 || isNaN(s)) {\n      return;\n    }\n\n    const intersection = this.start.clone().add(da.clone().multiplyScalar(s));\n    const distanceTest = intersection.clone().sub(line.start).lengthSq() + intersection.clone().sub(line.end).lengthSq();\n\n    if (distanceTest <= line.distanceSq()) {\n      return intersection;\n    }\n\n    return;\n  }\n}\n\nexport default Line3;\n\n\n\n// WEBPACK FOOTER //\n// ./Line3.js"," // Based on  http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfunction sqr (x) {\n  return x * x;\n}\n\nfunction dist2 (v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\n}\n\nfunction distanceToPointSquared (lineSegment, point) {\n  const l2 = dist2(lineSegment.start, lineSegment.end);\n\n  if(l2 === 0) {\n    return dist2(point, lineSegment.start);\n  }\n  const t = ((point.x - lineSegment.start.x) * (lineSegment.end.x - lineSegment.start.x) +\n        (point.y - lineSegment.start.y) * (lineSegment.end.y - lineSegment.start.y)) / l2;\n\n  if(t < 0) {\n    return dist2(point, lineSegment.start);\n  }\n  if(t > 1) {\n    return dist2(point, lineSegment.end);\n  }\n\n  const pt = {\n    x: lineSegment.start.x + t * (lineSegment.end.x - lineSegment.start.x),\n    y: lineSegment.start.y + t * (lineSegment.end.y - lineSegment.start.y)\n  };\n\n\n  return dist2(point, pt);\n}\n\nfunction distanceToPoint (lineSegment, point) {\n  return Math.sqrt(distanceToPointSquared(lineSegment, point));\n}\n\n// Returns intersection points of two lines\nfunction intersectLine (lineSegment1, lineSegment2) {\n  const intersectionPoint = {};\n\n  let x1 = lineSegment1.start.x,\n    y1 = lineSegment1.start.y,\n    x2 = lineSegment1.end.x,\n    y2 = lineSegment1.end.y,\n    x3 = lineSegment2.start.x,\n    y3 = lineSegment2.start.y,\n    x4 = lineSegment2.end.x,\n    y4 = lineSegment2.end.y;\n\n  let a1, a2, b1, b2, c1, c2; // Coefficients of line equations\n  let r1, r2, r3, r4; // Sign values\n\n  let denom, num; // Intermediate values\n\n    // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2;\n\n    // Compute r3 and r4\n  r3 = a1 * x3 + b1 * y3 + c1;\n  r4 = a1 * x4 + b1 * y4 + c1;\n\n    /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n     * same side of line 1, the line segments do not intersect.\n     */\n\n  if (r3 !== 0 &&\n        r4 !== 0 &&\n        cornerstoneMath.sign(r3) === cornerstoneMath.sign(r4)) {\n    return;\n  }\n\n    /* Compute a2, b2, c2 */\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4;\n\n    /* Compute r1 and r2 */\n\n  r1 = a2 * x1 + b2 * y1 + c2;\n  r2 = a2 * x2 + b2 * y2 + c2;\n\n    /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n     * on same side of second line segment, the line segments do\n     * not intersect.\n     */\n\n  if (r1 !== 0 &&\n        r2 !== 0 &&\n        cornerstoneMath.sign(r1) === cornerstoneMath.sign(r2)) {\n    return;\n  }\n\n    /* Line segments intersect: compute intersection point.\n     */\n\n  denom = (a1 * b2) - (a2 * b1);\n\n    /* The denom/2 is to get rounding instead of truncating.  It\n     * is added or subtracted to the numerator, depending upon the\n     * sign of the numerator.\n     */\n\n  num = (b1 * c2) - (b2 * c1);\n  const x = parseFloat(num / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  const y = parseFloat(num / denom);\n\n  intersectionPoint.x = x;\n  intersectionPoint.y = y;\n\n  return intersectionPoint;\n}\n\n// Module exports\nconst lineSegment = {\n  distanceToPoint,\n  intersectLine\n};\n\nexport default lineSegment;\n\n\n\n// WEBPACK FOOTER //\n// ./lineSegment.js","import Vector3 from './vector3';\n\n// Based on THREE.JS\nconst Matrix4 = function Matrix4 (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n  this.elements = new Float32Array(16);\n\n    // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\n    //   We should not support semi specification of Matrix4, it is just weird.\n\n  const te = this.elements;\n\n  te[0] = (n11 !== undefined) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;\n  te[1] = n21 || 0; te[5] = (n22 !== undefined) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;\n  te[2] = n31 || 0; te[6] = n32 || 0; te[10] = (n33 !== undefined) ? n33 : 1; te[14] = n34 || 0;\n  te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = (n44 !== undefined) ? n44 : 1;\n};\n\nMatrix4.prototype.makeRotationFromQuaternion = function (q) {\n  const te = this.elements;\n\n  let x = q.x,\n    y = q.y,\n    z = q.z,\n    w = q.w;\n  let x2 = x + x,\n    y2 = y + y,\n    z2 = z + z;\n  let xx = x * x2,\n    xy = x * y2,\n    xz = x * z2;\n  let yy = y * y2,\n    yz = y * z2,\n    zz = z * z2;\n  let wx = w * x2,\n    wy = w * y2,\n    wz = w * z2;\n\n  te[0] = 1 - (yy + zz);\n  te[4] = xy - wz;\n  te[8] = xz + wy;\n\n  te[1] = xy + wz;\n  te[5] = 1 - (xx + zz);\n  te[9] = yz - wx;\n\n  te[2] = xz - wy;\n  te[6] = yz + wx;\n  te[10] = 1 - (xx + yy);\n\n    // Last column\n  te[3] = 0;\n  te[7] = 0;\n  te[11] = 0;\n\n    // Bottom row\n  te[12] = 0;\n  te[13] = 0;\n  te[14] = 0;\n  te[15] = 1;\n\n  return this;\n};\n\nMatrix4.prototype.multiplyMatrices = function (a, b) {\n  const ae = a.elements;\n  const be = b.elements;\n  const te = this.elements;\n\n  let a11 = ae[0],\n    a12 = ae[4],\n    a13 = ae[8],\n    a14 = ae[12];\n  let a21 = ae[1],\n    a22 = ae[5],\n    a23 = ae[9],\n    a24 = ae[13];\n  let a31 = ae[2],\n    a32 = ae[6],\n    a33 = ae[10],\n    a34 = ae[14];\n  let a41 = ae[3],\n    a42 = ae[7],\n    a43 = ae[11],\n    a44 = ae[15];\n\n  let b11 = be[0],\n    b12 = be[4],\n    b13 = be[8],\n    b14 = be[12];\n  let b21 = be[1],\n    b22 = be[5],\n    b23 = be[9],\n    b24 = be[13];\n  let b31 = be[2],\n    b32 = be[6],\n    b33 = be[10],\n    b34 = be[14];\n  let b41 = be[3],\n    b42 = be[7],\n    b43 = be[11],\n    b44 = be[15];\n\n  te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n  te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n  te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n  te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n  te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n  te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n  te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n  te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n  te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n  te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n  te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n  te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n  te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n  te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n  te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n  te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n  return this;\n};\n\nMatrix4.prototype.multiply = function (m, n) {\n\n  if (n !== undefined) {\n\n    console.warn('DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\n    return this.multiplyMatrices(m, n);\n  }\n\n  return this.multiplyMatrices(this, m);\n};\n\nMatrix4.prototype.getInverse = function (m, throwOnInvertible) {\n\n    // Based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n  const te = this.elements;\n  const me = m.elements;\n\n  let n11 = me[0],\n    n12 = me[4],\n    n13 = me[8],\n    n14 = me[12];\n  let n21 = me[1],\n    n22 = me[5],\n    n23 = me[9],\n    n24 = me[13];\n  let n31 = me[2],\n    n32 = me[6],\n    n33 = me[10],\n    n34 = me[14];\n  let n41 = me[3],\n    n42 = me[7],\n    n43 = me[11],\n    n44 = me[15];\n\n  te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n  te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n  te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n  te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n  te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n  te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n  te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n  te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n  te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n  te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n  te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n  te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n  te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n  te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n  te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n  te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n\n  const det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n  if (det === 0) {\n\n    const msg = 'Matrix4.getInverse(): can\\'t invert matrix, determinant is 0';\n\n    if (throwOnInvertible || false) {\n\n      throw new Error(msg);\n\n    } else {\n\n      console.warn(msg);\n\n    }\n\n    this.identity();\n\n    return this;\n  }\n\n  this.multiplyScalar(1 / det);\n\n  return this;\n\n};\n\nMatrix4.prototype.applyToVector3Array = function () {\n\n  const v1 = new Vector3();\n\n  return function (array, offset, length) {\n\n    if (offset === undefined) {\n      offset = 0;\n    }\n    if (length === undefined) {\n      length = array.length;\n    }\n\n    for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n\n      v1.x = array[j];\n      v1.y = array[j + 1];\n      v1.z = array[j + 2];\n\n      v1.applyMatrix4(this);\n\n      array[j] = v1.x;\n      array[j + 1] = v1.y;\n      array[j + 2] = v1.z;\n\n    }\n\n    return array;\n\n  };\n\n};\n\nMatrix4.prototype.makeTranslation = function (x, y, z) {\n\n  this.set(\n\n        1, 0, 0, x,\n        0, 1, 0, y,\n        0, 0, 1, z,\n        0, 0, 0, 1\n\n    );\n\n  return this;\n\n};\nMatrix4.prototype.multiplyScalar = function (s) {\n\n  const te = this.elements;\n\n  te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\n  te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\n  te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\n  te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\n\n  return this;\n\n};\nMatrix4.prototype.set = function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\n  const te = this.elements;\n\n  te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\n  te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\n  te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\n  te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\n\n  return this;\n\n};\n\nMatrix4.prototype.makeScale = function (x, y, z) {\n\n  this.set(\n\n        x, 0, 0, 0,\n        0, y, 0, 0,\n        0, 0, z, 0,\n        0, 0, 0, 1\n\n    );\n\n  return this;\n\n};\n\nexport default Matrix4;\n\n\n\n// WEBPACK FOOTER //\n// ./matrix4.js","import Vector3 from './vector3.js';\n\n// Copied from Three.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\nconst Plane = function (normal, constant) {\n\n  this.normal = (normal !== undefined) ? normal : new Vector3(1, 0, 0);\n  this.constant = (constant !== undefined) ? constant : 0;\n\n};\n\nPlane.prototype = {\n\n  constructor: Plane,\n\n  set (normal, constant) {\n\n    this.normal.copy(normal);\n    this.constant = constant;\n\n    return this;\n\n  },\n\n  setComponents (x, y, z, w) {\n\n    this.normal.set(x, y, z);\n    this.constant = w;\n\n    return this;\n\n  },\n\n  setFromNormalAndCoplanarPoint (normal, point) {\n\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal); // Must be this.normal, not normal, as this.normal is normalized\n\n    return this;\n\n  },\n\n  setFromCoplanarPoints: (function () {\n\n    const v1 = new Vector3();\n    const v2 = new Vector3();\n\n    return function (a, b, c) {\n\n      const normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize();\n\n            // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n\n      return this;\n\n    };\n\n  })(),\n\n\n  copy (plane) {\n\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n\n    return this;\n\n  },\n\n  normalize () {\n\n        // Note: will lead to a divide by zero if the plane is invalid.\n\n    const inverseNormalLength = 1.0 / this.normal.length();\n\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n\n    return this;\n\n  },\n\n  negate () {\n\n    this.constant *= -1;\n    this.normal.negate();\n\n    return this;\n\n  },\n\n  distanceToPoint (point) {\n\n    return this.normal.dot(point) + this.constant;\n\n  },\n\n  distanceToSphere (sphere) {\n\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n\n  },\n\n  projectPoint (point, optionalTarget) {\n\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n\n  },\n\n  orthoPoint (point, optionalTarget) {\n\n    const perpendicularMagnitude = this.distanceToPoint(point);\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n\n  },\n\n  isIntersectionLine (line) {\n\n        // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    const startSign = this.distanceToPoint(line.start);\n    const endSign = this.distanceToPoint(line.end);\n\n    return (startSign < 0 && endSign > 0) || (endSign < 0 && startSign > 0);\n\n  },\n\n  intersectLine: (function () {\n\n    const v1 = new Vector3();\n\n    return function (line, optionalTarget) {\n\n      const result = optionalTarget || new Vector3();\n\n      const direction = line.delta(v1);\n\n      const denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n\n                // Line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n\n          return result.copy(line.start);\n\n        }\n\n                // Unsure if this is the correct method to handle this case.\n        return undefined;\n\n      }\n\n      const t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n\n        return undefined;\n\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n\n    };\n\n  })(),\n\n  intersectPlane (targetPlane) {\n        // Returns the intersection line between two planes\n    const direction = this.normal.clone().cross(targetPlane.normal);\n    const origin = new Vector3();\n    const intersectionData = {\n      origin,\n      direction\n    };\n\n        // If the planes are parallel, return an empty vector for the\n        // Intersection line\n    if (this.normal.clone().cross(targetPlane.normal).length < 1e-10) {\n      intersectionData.direction = new Vector3();\n\n      return intersectionData;\n    }\n\n    const h1 = this.constant;\n    const h2 = targetPlane.constant;\n    const n1dotn2 = this.normal.clone().dot(targetPlane.normal);\n\n    const c1 = -(h1 - h2 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n    const c2 = -(h2 - h1 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n\n    intersectionData.origin = this.normal.clone().multiplyScalar(c1).add(targetPlane.normal.clone().multiplyScalar(c2));\n\n    return intersectionData;\n  },\n\n  coplanarPoint (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n\n  },\n\n  translate (offset) {\n\n    this.constant = this.constant - offset.dot(this.normal);\n\n    return this;\n\n  },\n\n  equals (plane) {\n\n    return plane.normal.equals(this.normal) && (plane.constant === this.constant);\n\n  },\n\n  clone () {\n\n    return new Plane().copy(this);\n\n  }\n};\n\nexport default Plane;\n\n\n\n// WEBPACK FOOTER //\n// ./plane.js","function pageToPoint (e) {\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n\nfunction subtract (lhs, rhs) {\n  return {\n    x: lhs.x - rhs.x,\n    y: lhs.y - rhs.y\n  };\n}\n\nfunction copy (point) {\n  return {\n    x: point.x,\n    y: point.y\n  };\n}\n\nfunction distance (from, to) {\n  return Math.sqrt(distanceSquared(from, to));\n}\n\nfunction distanceSquared (from, to) {\n  const delta = subtract(from, to);\n\n\n  return delta.x * delta.x + delta.y * delta.y;\n}\n\nfunction insideRect (point, rect) {\n  if(point.x < rect.left ||\n        point.x > rect.left + rect.width ||\n        point.y < rect.top ||\n        point.y > rect.top + rect.height) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Returns the closest source point to a target point\n * given an array of source points.\n *\n * @param sources An Array of source Points\n * @param target The target Point\n * @returns Point The closest point from the points array\n */\nfunction findClosestPoint (sources, target) {\n  const distances = [];\n  let minDistance;\n\n  sources.forEach(function (source, index) {\n    const distance = cornerstoneMath.point.distance(source, target);\n\n    distances.push(distance);\n\n    if (index === 0) {\n      minDistance = distance;\n    } else {\n      minDistance = Math.min(distance, minDistance);\n    }\n  });\n\n  const index = distances.indexOf(minDistance);\n\n\n  return sources[index];\n}\n\nconst point = {\n  subtract,\n  copy,\n  pageToPoint,\n  distance,\n  distanceSquared,\n  insideRect,\n  findClosestPoint\n};\n\nexport default point;\n\n\n\n// WEBPACK FOOTER //\n// ./point.js"," function rectToLineSegments (rect) {\n   const top = {\n     start: {\n       x: rect.left,\n       y: rect.top\n     },\n     end: {\n       x: rect.left + rect.width,\n       y: rect.top\n\n     }\n   };\n   const right = {\n     start: {\n       x: rect.left + rect.width,\n       y: rect.top\n     },\n     end: {\n       x: rect.left + rect.width,\n       y: rect.top + rect.height\n\n     }\n   };\n   const bottom = {\n     start: {\n       x: rect.left + rect.width,\n       y: rect.top + rect.height\n     },\n     end: {\n       x: rect.left,\n       y: rect.top + rect.height\n\n     }\n   };\n   const left = {\n     start: {\n       x: rect.left,\n       y: rect.top + rect.height\n     },\n     end: {\n       x: rect.left,\n       y: rect.top\n\n     }\n   };\n   const lineSegments = [top, right, bottom, left];\n\n\n   return lineSegments;\n }\n\n function distanceToPoint (rect, point) {\n   let minDistance = 655535;\n   const lineSegments = rectToLineSegments(rect);\n\n   lineSegments.forEach(function (lineSegment) {\n     const distance = cornerstoneMath.lineSegment.distanceToPoint(lineSegment, point);\n\n     if(distance < minDistance) {\n       minDistance = distance;\n     }\n   });\n\n   return minDistance;\n }\n\n// Returns top-left and bottom-right points of the rectangle\n function rectToPoints (rect) {\n   const rectPoints = {\n     topLeft: {\n       x: rect.left,\n       y: rect.top\n     },\n     bottomRight: {\n       x: rect.left + rect.width,\n       y: rect.top + rect.height\n     }\n   };\n\n   return rectPoints;\n }\n\n// Returns whether two non-rotated rectangles are intersected\n function doesIntersect (rect1, rect2) {\n   let intersectLeftRight;\n   let intersectTopBottom;\n\n   const rect1Points = rectToPoints(rect1);\n   const rect2Points = rectToPoints(rect2);\n\n   if (rect1.width >= 0) {\n     if (rect2.width >= 0) {\n       intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.topLeft.x));\n     } else {\n       intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.topLeft.x));\n     }\n   } else if (rect2.width >= 0) {\n     intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.bottomRight.x));\n   } else {\n     intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.bottomRight.x));\n   }\n\n   if (rect1.height >= 0) {\n     if (rect2.height >= 0) {\n       intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.topLeft.y));\n     } else {\n       intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.bottomRight.y) || (rect2Points.topLeft.y <= rect1Points.topLeft.y));\n     }\n   } else if (rect2.height >= 0) {\n     intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.bottomRight.y));\n   } else {\n     intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.bottomRight.y) || (rect2Points.top <= rect1Points.bottomRight.y));\n   }\n\n   return intersectLeftRight && intersectTopBottom;\n }\n\n// Returns intersection points of two non-rotated rectangles\n function getIntersectionRect (rect1, rect2) {\n   const intersectRect = {\n     topLeft: {},\n     bottomRight: {}\n   };\n\n   if (!doesIntersect(rect1, rect2)) {\n     return;\n   }\n\n   const rect1Points = rectToPoints(rect1);\n   const rect2Points = rectToPoints(rect2);\n\n   if (rect1.width >= 0) {\n     if (rect2.width >= 0) {\n       intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.topLeft.x);\n       intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n     } else {\n       intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n       intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n     }\n   } else if (rect2.width >= 0) {\n     intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n     intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n   } else {\n     intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.topLeft.x);\n     intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n   }\n\n   if (rect1.height >= 0) {\n     if (rect2.height >= 0) {\n       intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.topLeft.y);\n       intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n     } else {\n       intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n       intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n     }\n   } else if (rect2.height >= 0) {\n     intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n     intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n   } else {\n     intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.topLeft.y);\n     intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n   }\n\n    // Returns top-left and bottom-right points of intersected rectangle\n   return intersectRect;\n\n }\n\n const rect = {\n   distanceToPoint,\n   getIntersectionRect\n };\n\n export default rect;\n\n\n\n// WEBPACK FOOTER //\n// ./rect.js","export { default as Line3 } from './Line3.js';\nexport { default as lineSegment } from './lineSegment.js';\nexport { clamp,\n         degToRad,\n         radToDeg,\n         sign } from './math.js';\n\nexport { default as Matrix4 } from './matrix4.js';\nexport { default as plane } from './plane.js';\nexport { default as point } from './point.js';\nexport { default as quaternion } from './quaternion.js';\nexport { default as rect } from './rect.js';\nexport { default as Vector3 } from './vector3.js';\n\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}